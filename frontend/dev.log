
> my-v0-project@0.1.0 dev
> next dev

   ▲ Next.js 15.2.4
   - Local:        http://localhost:3000
   - Network:      http://192.168.1.200:3000
   - Environments: .env

 ✓ Starting...
 ✓ Ready in 1025ms
 ○ Compiling / ...
 ✓ Compiled / in 1358ms (792 modules)
 GET / 200 in 1554ms
 ✓ Compiled in 196ms (352 modules)
 ✓ Compiled /api/auth/verify in 151ms (869 modules)
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/auth/verify 200 in 219ms
 ✓ Compiled /api/auth/logout in 122ms (871 modules)
 POST /api/auth/logout 200 in 146ms
 GET / 200 in 25ms
 ✓ Compiled /pet-memorial in 188ms (915 modules)
 GET /pet-memorial 200 in 251ms
 ✓ Compiled /api/memorials in 106ms (927 modules)
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=6&sort=recent 200 in 131ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=6&sort=recent 200 in 4ms
 ✓ Compiled /community-pet-obituaries in 124ms (945 modules)
 GET /community-pet-obituaries 200 in 147ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 12ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 4ms
 ✓ Compiled /login in 117ms (960 modules)
 GET /login 200 in 143ms
 ✓ Compiled /api/auth/login in 187ms (963 modules)
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`passwordHash`, `main`.`users`.`avatar`, `main`.`users`.`preferredSystem`, `main`.`users`.`emailVerified`, `main`.`users`.`emailVerifyToken`, `main`.`users`.`resetPasswordToken`, `main`.`users`.`resetPasswordExpires`, `main`.`users`.`role`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`banReason`, `main`.`users`.`banExpiresAt`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`email` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`users` SET `lastLoginAt` = ?, `updatedAt` = ? WHERE (`main`.`users`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `name` AS `name`, `email` AS `email`, `role` AS `role`, `preferredSystem` AS `preferredSystem`, `createdAt` AS `createdAt`, `lastLoginAt` AS `lastLoginAt`
 POST /api/auth/login 200 in 417ms
 ✓ Compiled /admin in 306ms (1038 modules)
 GET /admin 200 in 325ms
 GET /admin 200 in 8ms
 ✓ Compiled /api/admin/recent-activity in 190ms (1029 modules)
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`role`, `main`.`users`.`isActive`, `main`.`users`.`isBanned` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`role`, `main`.`users`.`isActive`, `main`.`users`.`isBanned` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`createdAt` FROM `main`.`users` WHERE 1=1 ORDER BY `main`.`users`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all`, `main`.`users`.`isActive`, `main`.`users`.`isBanned` FROM `main`.`users` WHERE 1=1 GROUP BY `main`.`users`.`isActive`, `main`.`users`.`isBanned` LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`users`.`id` FROM `main`.`users` WHERE `main`.`users`.`createdAt` >= ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`likes`.`id` FROM `main`.`likes` WHERE 1=1 LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`status` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId` FROM `main`.`memorials` WHERE 1=1 ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`users`.`id` FROM `main`.`users` WHERE `main`.`users`.`createdAt` >= ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all`, `main`.`content_reviews`.`status` FROM `main`.`content_reviews` WHERE 1=1 GROUP BY `main`.`content_reviews`.`status` LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE 1=1 ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`messages`.`id` FROM `main`.`messages` WHERE 1=1 LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`status` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE 1=1 LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE 1=1 ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`subjectName` FROM `main`.`memorials` WHERE `main`.`memorials`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`candles`.`id` FROM `main`.`candles` WHERE 1=1 LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorial_images`.`id` FROM `main`.`memorial_images` WHERE 1=1 LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`createdAt` >= ? LIMIT ? OFFSET ?) AS `sub`
 GET /api/admin/stats 200 in 214ms
 GET /api/admin/recent-activity 200 in 214ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`role`, `main`.`users`.`isActive`, `main`.`users`.`isBanned` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all`, `main`.`users`.`isActive`, `main`.`users`.`isBanned` FROM `main`.`users` WHERE 1=1 GROUP BY `main`.`users`.`isActive`, `main`.`users`.`isBanned` LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`users`.`id` FROM `main`.`users` WHERE `main`.`users`.`createdAt` >= ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`users`.`id` FROM `main`.`users` WHERE `main`.`users`.`createdAt` >= ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`candles`.`id` FROM `main`.`candles` WHERE 1=1 LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorial_images`.`id` FROM `main`.`memorial_images` WHERE 1=1 LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE 1=1 LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`likes`.`id` FROM `main`.`likes` WHERE 1=1 LIMIT ? OFFSET ?) AS `sub`
 GET /api/admin/stats 200 in 4ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`status` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`messages`.`id` FROM `main`.`messages` WHERE 1=1 LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all`, `main`.`content_reviews`.`status` FROM `main`.`content_reviews` WHERE 1=1 GROUP BY `main`.`content_reviews`.`status` LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`status` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`createdAt` >= ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`role`, `main`.`users`.`isActive`, `main`.`users`.`isBanned` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`createdAt` FROM `main`.`users` WHERE 1=1 ORDER BY `main`.`users`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId` FROM `main`.`memorials` WHERE 1=1 ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE 1=1 ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE 1=1 ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`subjectName` FROM `main`.`memorials` WHERE `main`.`memorials`.`id` IN (?) LIMIT ? OFFSET ?
 GET /api/admin/recent-activity 200 in 5ms
 GET / 200 in 11ms
 ✓ Compiled /api/users/[id] in 203ms (1031 modules)
 GET /pet-memorial 200 in 231ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=6&sort=recent 200 in 9ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=6&sort=recent 200 in 4ms
Error: Route "/api/users/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at PATCH (app/api/users/[id]/route.ts:57:12)
  55 | ) {
  56 |   try {
> 57 |     const { id } = params
     |            ^
  58 |     const body = await request.json()
  59 |     
  60 |     // 验证输入数据
prisma:query UPDATE `main`.`users` SET `preferredSystem` = ?, `updatedAt` = ? WHERE (`main`.`users`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `name` AS `name`, `email` AS `email`, `preferredSystem` AS `preferredSystem`, `createdAt` AS `createdAt`, `lastLoginAt` AS `lastLoginAt`
 PATCH /api/users/cmdrqxv9v0000pt83zz3diygj 200 in 490ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/auth/verify 200 in 9ms
 ✓ Compiled /create-obituary in 422ms (1190 modules)
 GET /create-obituary 200 in 456ms
 GET /create-obituary 200 in 8ms
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`passwordHash`, `main`.`users`.`avatar`, `main`.`users`.`preferredSystem`, `main`.`users`.`emailVerified`, `main`.`users`.`emailVerifyToken`, `main`.`users`.`resetPasswordToken`, `main`.`users`.`resetPasswordExpires`, `main`.`users`.`role`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`banReason`, `main`.`users`.`banExpiresAt`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query BEGIN IMMEDIATE
prisma:query INSERT INTO `main`.`memorials` (`id`, `title`, `slug`, `type`, `status`, `subjectName`, `subjectType`, `birthDate`, `deathDate`, `breed`, `color`, `gender`, `story`, `creatorName`, `creatorEmail`, `viewCount`, `candleCount`, `messageCount`, `likeCount`, `allowMessages`, `allowCandles`, `isPublic`, `featured`, `createdAt`, `updatedAt`, `authorId`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) RETURNING `id` AS `id`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`id` = ? LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query COMMIT
 POST /api/memorials 200 in 16ms
 GET /community-pet-obituaries 200 in 9ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 4ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 4ms
 GET / 200 in 88ms
 GET /community-pet-obituaries 200 in 36ms
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/auth/verify 200 in 14ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 4ms
 GET /community-pet-obituaries 200 in 29ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/auth/verify 200 in 3ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 3ms
 ✓ Compiled in 105ms (486 modules)
 GET /community-pet-obituaries 200 in 33ms
 ✓ Compiled in 72ms (486 modules)
 GET /community-pet-obituaries 200 in 7ms
 ✓ Compiled in 61ms (486 modules)
 GET /community-pet-obituaries 200 in 8ms
 ✓ Compiled in 80ms (486 modules)
 GET /community-pet-obituaries 200 in 14ms
 GET /community-pet-obituaries 200 in 53ms
 ✓ Compiled in 198ms (1061 modules)
 GET /community-pet-obituaries 200 in 61ms
 ✓ Compiled in 294ms (1061 modules)
 GET /community-pet-obituaries 200 in 38ms
 ✓ Compiled in 223ms (1061 modules)
 GET /community-pet-obituaries 200 in 48ms
 ✓ Compiled in 65ms (486 modules)
 GET /community-pet-obituaries 200 in 7ms
 ✓ Compiled in 63ms (486 modules)
 GET /community-pet-obituaries 200 in 8ms
 ✓ Compiled in 57ms (486 modules)
 GET /community-pet-obituaries 200 in 7ms
 ✓ Compiled in 63ms (486 modules)
 GET /community-pet-obituaries 200 in 7ms
 ✓ Compiled in 59ms (486 modules)
 GET /community-pet-obituaries 200 in 7ms
 GET /community-pet-obituaries 200 in 78ms
 ✓ Compiled /api/memorials in 169ms (672 modules)
 ✓ Compiled (684 modules)
 GET /api/memorials?type=PET&limit=50 200 in 337ms
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/auth/verify 200 in 370ms
 ✓ Compiled /settings in 388ms (1182 modules)
 GET /settings 200 in 432ms
 ✓ Compiled /api/memorials/user/[userId] in 111ms (1184 modules)
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdrqxv9v0000pt83zz3diygj 200 in 362ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdrqxv9v0000pt83zz3diygj 200 in 17ms
 ✓ Compiled /_not-found in 106ms (1188 modules)
 GET /placeholder-memorial.jpg 404 in 161ms
 ✓ Compiled /settings/edit/[id] in 219ms (1205 modules)
 GET /settings/edit/cmdruvyhm0001ptqqum3wxqcu 200 in 456ms
 GET /api/auth/verify 200 in 20ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 ✓ Compiled /api/memorials/[id] in 183ms (1207 modules)
 GET /api/auth/verify 200 in 212ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/[id]/route.ts:37:12)
  35 | ) {
  36 |   try {
> 37 |     const { id } = params
     |            ^
  38 |
  39 |     const memorial = await prisma.memorial.findUnique({
  40 |       where: { id },
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/cmdruvyhm0001ptqqum3wxqcu 200 in 457ms
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/[id]/route.ts:37:12)
  35 | ) {
  36 |   try {
> 37 |     const { id } = params
     |            ^
  38 |
  39 |     const memorial = await prisma.memorial.findUnique({
  40 |       where: { id },
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/cmdruvyhm0001ptqqum3wxqcu 200 in 21ms
 GET /api/auth/verify 200 in 24ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /settings 200 in 45ms
 GET /api/auth/verify 200 in 8ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /settings 200 in 9ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/auth/verify 200 in 4ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/auth/verify 200 in 3ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
 GET /api/memorials/user/cmdrqxv9v0000pt83zz3diygj 200 in 24ms
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) LIMIT ? OFFSET ?
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdrqxv9v0000pt83zz3diygj 200 in 19ms
 GET /placeholder-memorial.jpg 404 in 26ms
 GET /settings/edit/cmdruvyhm0001ptqqum3wxqcu 200 in 9ms
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/auth/verify 200 in 7ms
 GET /api/auth/verify 200 in 7ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/[id]/route.ts:37:12)
  35 | ) {
  36 |   try {
> 37 |     const { id } = params
     |            ^
  38 |
  39 |     const memorial = await prisma.memorial.findUnique({
  40 |       where: { id },
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/cmdruvyhm0001ptqqum3wxqcu 200 in 42ms
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/[id]/route.ts:37:12)
  35 | ) {
  36 |   try {
> 37 |     const { id } = params
     |            ^
  38 |
  39 |     const memorial = await prisma.memorial.findUnique({
  40 |       where: { id },
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT 1
 GET /api/auth/verify 200 in 31ms
 GET /api/memorials/cmdruvyhm0001ptqqum3wxqcu 200 in 31ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /settings 200 in 39ms
 GET /api/auth/verify 200 in 12ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /settings 200 in 18ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/auth/verify 200 in 8ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/auth/verify 200 in 5ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdrqxv9v0000pt83zz3diygj 200 in 28ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
 GET /api/memorials/user/cmdrqxv9v0000pt83zz3diygj 200 in 24ms
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/auth/verify 200 in 3ms
 GET /api/auth/verify 200 in 4ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/[id]/route.ts:37:12)
  35 | ) {
  36 |   try {
> 37 |     const { id } = params
     |            ^
  38 |
  39 |     const memorial = await prisma.memorial.findUnique({
  40 |       where: { id },
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/cmdruvyhm0001ptqqum3wxqcu 200 in 23ms
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/[id]/route.ts:37:12)
  35 | ) {
  36 |   try {
> 37 |     const { id } = params
     |            ^
  38 |
  39 |     const memorial = await prisma.memorial.findUnique({
  40 |       where: { id },
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/auth/verify 200 in 27ms
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/cmdruvyhm0001ptqqum3wxqcu 200 in 29ms
 GET /settings 200 in 31ms
 GET /api/auth/verify 200 in 5ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /settings 200 in 10ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/auth/verify 200 in 7ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/auth/verify 200 in 3ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdrqxv9v0000pt83zz3diygj 200 in 21ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
 GET /api/memorials/user/cmdrqxv9v0000pt83zz3diygj 200 in 21ms
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) LIMIT ? OFFSET ?
 ✓ Compiled / in 92ms (718 modules)
 GET / 200 in 131ms
 GET /pet-memorial 200 in 10ms
 GET /pet-memorial 200 in 8ms
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=6&sort=recent 200 in 16ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=6&sort=recent 200 in 3ms
 GET /create-obituary 200 in 9ms
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`passwordHash`, `main`.`users`.`avatar`, `main`.`users`.`preferredSystem`, `main`.`users`.`emailVerified`, `main`.`users`.`emailVerifyToken`, `main`.`users`.`resetPasswordToken`, `main`.`users`.`resetPasswordExpires`, `main`.`users`.`role`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`banReason`, `main`.`users`.`banExpiresAt`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query BEGIN IMMEDIATE
prisma:query INSERT INTO `main`.`memorials` (`id`, `title`, `slug`, `type`, `status`, `subjectName`, `subjectType`, `birthDate`, `deathDate`, `breed`, `color`, `gender`, `story`, `creatorName`, `creatorEmail`, `viewCount`, `candleCount`, `messageCount`, `likeCount`, `allowMessages`, `allowCandles`, `isPublic`, `featured`, `createdAt`, `updatedAt`, `authorId`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) RETURNING `id` AS `id`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`id` = ? LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query COMMIT
 POST /api/memorials 200 in 6ms
 ✓ Compiled /api/upload/image in 252ms (1122 modules)
 POST /api/upload/image 200 in 278ms
 ✓ Compiled /api/images in 170ms (1124 modules)
Create image error: Error [ZodError]: [
  {
    "validation": "url",
    "code": "invalid_string",
    "message": "图片URL格式不正确",
    "path": [
      "url"
    ]
  }
]
    at POST (app/api/images/route.ts:29:44)
  27 |     
  28 |     // 验证输入数据
> 29 |     const validatedData = createImageSchema.parse(body)
     |                                            ^
  30 |
  31 |     // 验证纪念页是否存在
  32 |     const memorial = await prisma.memorial.findUnique({ {
  issues: [Array],
  addIssue: [Function (anonymous)],
  addIssues: [Function (anonymous)]
}
 POST /api/images 400 in 252ms
 GET /create-obituary 200 in 254ms
 GET /create-obituary 200 in 5ms
 GET /community-pet-obituaries 200 in 8ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 7ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 6ms
 ✓ Compiled /community-pet-obituaries/[slug] in 379ms (1124 modules)
 GET /community-pet-obituaries/%E5%A4%9A%E5%A4%9A%E5%A6%88%E5%92%AA-pet-1753995384468 200 in 612ms
 ✓ Compiled /api/memorials/slug/[slug] in 101ms (1126 modules)
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/%E5%A4%9A%E5%A4%9A%E5%A6%88%E5%92%AA-pet-1753995384468 200 in 346ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/%E5%A4%9A%E5%A4%9A%E5%A6%88%E5%92%AA-pet-1753995384468 200 in 22ms
 GET /settings 200 in 18ms
 ✓ Compiled /api/memorials/user/[userId] in 66ms (629 modules)
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdrqxv9v0000pt83zz3diygj 200 in 103ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdrqxv9v0000pt83zz3diygj 200 in 18ms
 ✓ Compiled /_not-found in 181ms (1146 modules)
 GET /placeholder-memorial.jpg 404 in 232ms
 GET /settings 200 in 54ms
 ✓ Compiled /settings/edit/[id] in 93ms (643 modules)
 GET /settings/edit/cmdruvyhm0001ptqqum3wxqcu 200 in 127ms
 ✓ Compiled /api/memorials/[id] in 161ms (723 modules)
 ✓ Compiled (725 modules)
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/[id]/route.ts:37:12)
  35 | ) {
  36 |   try {
> 37 |     const { id } = params
     |            ^
  38 |
  39 |     const memorial = await prisma.memorial.findUnique({
  40 |       where: { id },
 GET /api/auth/verify 200 in 337ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/cmdruvyhm0001ptqqum3wxqcu 200 in 332ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/auth/verify 200 in 3ms
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/[id]/route.ts:37:12)
  35 | ) {
  36 |   try {
> 37 |     const { id } = params
     |            ^
  38 |
  39 |     const memorial = await prisma.memorial.findUnique({
  40 |       where: { id },
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/cmdruvyhm0001ptqqum3wxqcu 200 in 22ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/auth/verify 200 in 43ms
 GET /settings 200 in 44ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/auth/verify 200 in 6ms
 GET /settings 200 in 9ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/auth/verify 200 in 3ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/auth/verify 200 in 3ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
 GET /api/memorials/user/cmdrqxv9v0000pt83zz3diygj 200 in 25ms
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdrqxv9v0000pt83zz3diygj 200 in 19ms
Create image error: Error [ZodError]: [
  {
    "validation": "url",
    "code": "invalid_string",
    "message": "图片URL格式不正确",
    "path": [
      "url"
    ]
  }
]
    at POST (app/api/images/route.ts:29:44)
  27 |     
  28 |     // 验证输入数据
> 29 |     const validatedData = createImageSchema.parse(body)
     |                                            ^
  30 |
  31 |     // 验证纪念页是否存在
  32 |     const memorial = await prisma.memorial.findUnique({ {
  issues: [Array],
  addIssue: [Function (anonymous)],
  addIssues: [Function (anonymous)]
}
 POST /api/images 400 in 45ms
 ✓ Compiled in 283ms (1095 modules)
 GET /settings 200 in 70ms
 ✓ Compiled /api/images in 141ms (610 modules)
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId` FROM `main`.`memorials` WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query BEGIN IMMEDIATE
prisma:query UPDATE `main`.`memorial_images` SET `isMain` = ? WHERE (`main`.`memorial_images`.`memorialId` = ? AND `main`.`memorial_images`.`isMain` = ?)
prisma:query COMMIT
Create image error: Error [PrismaClientValidationError]: 
Invalid `prisma.memorialImage.create()` invocation:

{
  data: {
    memorialId: "cmdrvkcd00003ptqqod90eisu",
    url: "/uploads/images/1753995384750-f89da9a26d8de6e8.jpeg",
    filename: "1753995384750-f89da9a26d8de6e8.jpeg",
    mimeType: "image/jpeg",
    size: 50000,
    isMain: true,
+   originalName: String
  },
  include: {
    memorial: {
      select: {
        id: true,
        title: true,
        type: true
      }
    }
  }
}

Argument `originalName` is missing.
    at async POST (app/api/images/route.ts:57:18)
  55 |
  56 |     // 创建图片记录
> 57 |     const image = await prisma.memorialImage.create({
     |                  ^
  58 |       data: validatedData,
  59 |       include: {
  60 |         memorial: { {
  clientVersion: '6.13.0'
}
 POST /api/images 500 in 247ms
 GET /settings 200 in 124ms
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId` FROM `main`.`memorials` WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query BEGIN IMMEDIATE
prisma:query UPDATE `main`.`memorial_images` SET `isMain` = ? WHERE (`main`.`memorial_images`.`memorialId` = ? AND `main`.`memorial_images`.`isMain` = ?)
prisma:query COMMIT
Create image error: Error [PrismaClientValidationError]: 
Invalid `prisma.memorialImage.create()` invocation:

{
  data: {
    memorialId: "cmdrvkcd00003ptqqod90eisu",
    url: "/uploads/images/1753995384750-f89da9a26d8de6e8.jpeg",
    filename: "1753995384750-f89da9a26d8de6e8.jpeg",
    mimeType: "image/jpeg",
    size: 50000,
    isMain: true,
+   originalName: String
  },
  include: {
    memorial: {
      select: {
        id: true,
        title: true,
        type: true
      }
    }
  }
}

Argument `originalName` is missing.
    at async POST (app/api/images/route.ts:57:18)
  55 |
  56 |     // 创建图片记录
> 57 |     const image = await prisma.memorialImage.create({
     |                  ^
  58 |       data: validatedData,
  59 |       include: {
  60 |         memorial: { {
  clientVersion: '6.13.0'
}
 POST /api/images 500 in 39ms
 ✓ Compiled in 214ms (1123 modules)
 GET /settings 200 in 38ms
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId` FROM `main`.`memorials` WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query BEGIN IMMEDIATE
prisma:query UPDATE `main`.`memorial_images` SET `isMain` = ? WHERE (`main`.`memorial_images`.`memorialId` = ? AND `main`.`memorial_images`.`isMain` = ?)
prisma:query COMMIT
prisma:query BEGIN IMMEDIATE
prisma:query INSERT INTO `main`.`memorial_images` (`id`, `filename`, `originalName`, `url`, `size`, `mimeType`, `isMain`, `order`, `createdAt`, `memorialId`) VALUES (?,?,?,?,?,?,?,?,?,?) RETURNING `id` AS `id`
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`id` = ? LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`type` FROM `main`.`memorials` WHERE `main`.`memorials`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query COMMIT
 POST /api/images 200 in 17ms
 ✓ Compiled /api/memorials/slug/[slug] in 124ms (600 modules)
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/%e5%a4%9a%e5%a4%9a%e5%a6%88%e5%92%aa-pet-1753995384468 200 in 166ms
 GET /settings 200 in 70ms
 ✓ Compiled /login in 269ms (679 modules)
 ✓ Compiled (686 modules)
 GET /api/auth/verify 200 in 491ms
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /login 200 in 481ms
 ✓ Compiled /api/memorials/user/[userId] in 120ms (688 modules)
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdrqxv9v0000pt83zz3diygj 200 in 158ms
 ✓ Compiled /api/auth/login in 67ms (701 modules)
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`passwordHash`, `main`.`users`.`avatar`, `main`.`users`.`preferredSystem`, `main`.`users`.`emailVerified`, `main`.`users`.`emailVerifyToken`, `main`.`users`.`resetPasswordToken`, `main`.`users`.`resetPasswordExpires`, `main`.`users`.`role`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`banReason`, `main`.`users`.`banExpiresAt`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`email` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`users` SET `lastLoginAt` = ?, `updatedAt` = ? WHERE (`main`.`users`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `name` AS `name`, `email` AS `email`, `role` AS `role`, `preferredSystem` AS `preferredSystem`, `createdAt` AS `createdAt`, `lastLoginAt` AS `lastLoginAt`
 POST /api/auth/login 200 in 312ms
 GET /admin 200 in 20ms
 ✓ Compiled /api/admin/recent-activity in 66ms (704 modules)
 ✓ Compiled (706 modules)
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`role`, `main`.`users`.`isActive`, `main`.`users`.`isBanned` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`role`, `main`.`users`.`isActive`, `main`.`users`.`isBanned` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`createdAt` FROM `main`.`users` WHERE 1=1 ORDER BY `main`.`users`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all`, `main`.`users`.`isActive`, `main`.`users`.`isBanned` FROM `main`.`users` WHERE 1=1 GROUP BY `main`.`users`.`isActive`, `main`.`users`.`isBanned` LIMIT ? OFFSET ?
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`users`.`id` FROM `main`.`users` WHERE `main`.`users`.`createdAt` >= ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`messages`.`id` FROM `main`.`messages` WHERE 1=1 LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`status` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`likes`.`id` FROM `main`.`likes` WHERE 1=1 LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`users`.`id` FROM `main`.`users` WHERE `main`.`users`.`createdAt` >= ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`createdAt` >= ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`status` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`candles`.`id` FROM `main`.`candles` WHERE 1=1 LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE 1=1 LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorial_images`.`id` FROM `main`.`memorial_images` WHERE 1=1 LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all`, `main`.`content_reviews`.`status` FROM `main`.`content_reviews` WHERE 1=1 GROUP BY `main`.`content_reviews`.`status` LIMIT ? OFFSET ?
 GET /api/admin/stats 200 in 170ms
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId` FROM `main`.`memorials` WHERE 1=1 ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE 1=1 ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE 1=1 ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`subjectName` FROM `main`.`memorials` WHERE `main`.`memorials`.`id` IN (?) LIMIT ? OFFSET ?
 GET /api/admin/recent-activity 200 in 171ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`role`, `main`.`users`.`isActive`, `main`.`users`.`isBanned` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all`, `main`.`users`.`isActive`, `main`.`users`.`isBanned` FROM `main`.`users` WHERE 1=1 GROUP BY `main`.`users`.`isActive`, `main`.`users`.`isBanned` LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`users`.`id` FROM `main`.`users` WHERE `main`.`users`.`createdAt` >= ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`users`.`id` FROM `main`.`users` WHERE `main`.`users`.`createdAt` >= ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`likes`.`id` FROM `main`.`likes` WHERE 1=1 LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`messages`.`id` FROM `main`.`messages` WHERE 1=1 LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all`, `main`.`content_reviews`.`status` FROM `main`.`content_reviews` WHERE 1=1 GROUP BY `main`.`content_reviews`.`status` LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorial_images`.`id` FROM `main`.`memorial_images` WHERE 1=1 LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE 1=1 LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`status` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`candles`.`id` FROM `main`.`candles` WHERE 1=1 LIMIT ? OFFSET ?) AS `sub`
 GET /api/admin/stats 200 in 4ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`createdAt` >= ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`status` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`role`, `main`.`users`.`isActive`, `main`.`users`.`isBanned` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`createdAt` FROM `main`.`users` WHERE 1=1 ORDER BY `main`.`users`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId` FROM `main`.`memorials` WHERE 1=1 ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE 1=1 ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE 1=1 ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`subjectName` FROM `main`.`memorials` WHERE `main`.`memorials`.`id` IN (?) LIMIT ? OFFSET ?
 GET /api/admin/recent-activity 200 in 4ms
 ✓ Compiled / in 77ms (714 modules)
 GET / 200 in 113ms
 GET /pet-memorial 200 in 16ms
 GET /pet-memorial 200 in 10ms
 ✓ Compiled /api/memorials in 84ms (716 modules)
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=6&sort=recent 200 in 111ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=6&sort=recent 200 in 3ms
 ✓ Compiled /community-pet-obituaries in 83ms (653 modules)
 GET /community-pet-obituaries 200 in 117ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 10ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 4ms
 GET /community-pet-obituaries/%E5%A4%9A%E5%A4%9A%E5%A6%88%E5%92%AA-pet-1753995384468 200 in 10ms
 ✓ Compiled /api/memorials/slug/[slug] in 146ms (655 modules)
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/%E5%A4%9A%E5%A4%9A%E5%A6%88%E5%92%AA-pet-1753995384468 200 in 183ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/%E5%A4%9A%E5%A4%9A%E5%A6%88%E5%92%AA-pet-1753995384468 200 in 19ms
 GET /settings 200 in 18ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdrqxv9v0000pt83zz3diygj 200 in 22ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdrqxv9v0000pt83zz3diygj 200 in 18ms
 ✓ Compiled /_not-found in 322ms (1172 modules)
 GET /placeholder-memorial.jpg 404 in 377ms
 GET /settings 200 in 56ms
 GET /community-pet-obituaries/%E6%B5%8B%E8%AF%95-pet-1753994246744 200 in 9ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/%E6%B5%8B%E8%AF%95-pet-1753994246744 200 in 25ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/%E6%B5%8B%E8%AF%95-pet-1753994246744 200 in 22ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
 GET /api/memorials/user/cmdrqxv9v0000pt83zz3diygj 200 in 23ms
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdrqxv9v0000pt83zz3diygj 200 in 18ms
 GET /placeholder-memorial.jpg 404 in 18ms
 ✓ Compiled /settings/edit/[id] in 208ms (729 modules)
 GET /settings/edit/cmdruvyhm0001ptqqum3wxqcu 200 in 247ms
 GET /api/auth/verify 200 in 26ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/auth/verify 200 in 5ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 ✓ Compiled /api/memorials/[id] in 112ms (731 modules)
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/[id]/route.ts:37:12)
  35 | ) {
  36 |   try {
> 37 |     const { id } = params
     |            ^
  38 |
  39 |     const memorial = await prisma.memorial.findUnique({
  40 |       where: { id },
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/cmdruvyhm0001ptqqum3wxqcu 200 in 172ms
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/[id]/route.ts:37:12)
  35 | ) {
  36 |   try {
> 37 |     const { id } = params
     |            ^
  38 |
  39 |     const memorial = await prisma.memorial.findUnique({
  40 |       where: { id },
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/auth/verify 200 in 47ms
 GET /settings 200 in 49ms
 GET /api/memorials/cmdruvyhm0001ptqqum3wxqcu 200 in 50ms
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/auth/verify 200 in 4ms
 GET /api/auth/verify 200 in 9ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /settings 200 in 11ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/auth/verify 200 in 3ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdrqxv9v0000pt83zz3diygj 200 in 22ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
 GET /api/memorials/user/cmdrqxv9v0000pt83zz3diygj 200 in 24ms
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 ✓ Compiled /api/auth/logout in 93ms (733 modules)
 POST /api/auth/logout 200 in 112ms
 GET / 200 in 15ms
 GET /login 200 in 8ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`passwordHash`, `main`.`users`.`avatar`, `main`.`users`.`preferredSystem`, `main`.`users`.`emailVerified`, `main`.`users`.`emailVerifyToken`, `main`.`users`.`resetPasswordToken`, `main`.`users`.`resetPasswordExpires`, `main`.`users`.`role`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`banReason`, `main`.`users`.`banExpiresAt`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`email` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`users` SET `lastLoginAt` = ?, `updatedAt` = ? WHERE (`main`.`users`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `name` AS `name`, `email` AS `email`, `role` AS `role`, `preferredSystem` AS `preferredSystem`, `createdAt` AS `createdAt`, `lastLoginAt` AS `lastLoginAt`
 POST /api/auth/login 200 in 222ms
 GET /pet-memorial 200 in 6ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=6&sort=recent 200 in 10ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=6&sort=recent 200 in 5ms
 GET /settings 200 in 8ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 20ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 21ms
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?) LIMIT ? OFFSET ?
 GET /placeholder-memorial.jpg 404 in 26ms
 GET /settings/edit/cmdq9j2qh000jpt8lp4j89aby 200 in 8ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/auth/verify 200 in 5ms
 GET /api/auth/verify 200 in 4ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/[id]/route.ts:37:12)
  35 | ) {
  36 |   try {
> 37 |     const { id } = params
     |            ^
  38 |
  39 |     const memorial = await prisma.memorial.findUnique({
  40 |       where: { id },
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/cmdq9j2qh000jpt8lp4j89aby 200 in 31ms
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/[id]/route.ts:37:12)
  35 | ) {
  36 |   try {
> 37 |     const { id } = params
     |            ^
  38 |
  39 |     const memorial = await prisma.memorial.findUnique({
  40 |       where: { id },
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
 GET /api/memorials/cmdq9j2qh000jpt8lp4j89aby 200 in 27ms
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/auth/verify 200 in 29ms
 GET /settings 200 in 32ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/auth/verify 200 in 11ms
 GET /settings 200 in 12ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/auth/verify 200 in 4ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/auth/verify 200 in 4ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 39ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 34ms
 ✓ Compiled in 396ms (1029 modules)
 GET /settings 200 in 74ms
 ✓ Compiled in 111ms (513 modules)
 GET /settings 200 in 7ms
 ⚠ Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
 GET /settings 200 in 69ms
 ✓ Compiled /api/auth/verify in 81ms (613 modules)
prisma:query SELECT 1
 GET /api/auth/verify 200 in 249ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email`, `main`.`users`.`role`, `main`.`users`.`preferredSystem`, `main`.`users`.`isActive`, `main`.`users`.`isBanned`, `main`.`users`.`emailVerified`, `main`.`users`.`createdAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /login 200 in 241ms
 ✓ Compiled /api/memorials/user/[userId] in 62ms (615 modules)
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 110ms
 ✓ Compiled in 134ms (513 modules)
 GET /login 200 in 44ms
 ✓ Compiled in 82ms (513 modules)
 GET /login 200 in 7ms
 ✓ Compiled in 79ms (513 modules)
 GET /login 200 in 7ms
 ✓ Compiled in 141ms (513 modules)
 GET /login 200 in 36ms
 ✓ Compiled in 109ms (513 modules)
 ✓ Compiled /_not-found in 421ms (1019 modules)
 GET /login 404 in 518ms
 GET /login 200 in 9ms
 GET /login 200 in 63ms
 GET /_next/static/css/app/layout.css?v=1754031914154 404 in 16ms
 GET /_next/static/chunks/main-app.js?v=1754031914154 404 in 40ms
 GET /_next/static/chunks/app-pages-internals.js 404 in 39ms
 GET /_next/static/chunks/app/login/page.js 404 in 39ms
 ✓ Compiled in 66ms (516 modules)
   Reload env: .env
 ✓ Compiled in 86ms (1019 modules)
 ✓ Compiled in 58ms (513 modules)
 ✓ Compiled in 63ms (513 modules)
 ✓ Compiled in 68ms (513 modules)
 ✓ Compiled in 131ms (1015 modules)
 ✓ Compiled in 65ms (513 modules)
 ✓ Compiled in 57ms (513 modules)
 ✓ Compiled in 60ms (513 modules)
 ✓ Compiled in 76ms (1015 modules)
 ✓ Compiled in 610ms (1029 modules)
 ✓ Compiled in 131ms (1029 modules)
 ✓ Compiled in 65ms (513 modules)
 ✓ Compiled in 66ms (513 modules)
 ✓ Compiled in 75ms (513 modules)
 ✓ Compiled in 63ms (513 modules)
 ✓ Compiled in 66ms (513 modules)
 ✓ Compiled in 63ms (513 modules)
 ✓ Compiled in 290ms (1029 modules)
 ✓ Compiled in 142ms (1029 modules)
 ✓ Compiled in 122ms (1029 modules)
 ✓ Compiled in 127ms (1029 modules)
 ✓ Compiled in 62ms (513 modules)
 ✓ Compiled in 81ms (513 modules)
 ✓ Compiled in 65ms (513 modules)
 ✓ Compiled in 61ms (513 modules)
 GET /login 200 in 106ms
 ✓ Compiled /_not-found in 223ms (1019 modules)
 GET /_next/static/chunks/app-pages-internals.js 404 in 293ms
 GET /_next/static/chunks/main-app.js?v=1754059335928 404 in 295ms
