
> my-v0-project@0.1.0 dev
> next dev

   ▲ Next.js 15.2.4
   - Local:        http://localhost:3000
   - Network:      http://192.168.1.200:3000
   - Environments: .env

 ✓ Starting...
 ✓ Ready in 1110ms
 ○ Compiling / ...
 ✓ Compiled / in 724ms (783 modules)
 GET / 200 in 915ms
 ✓ Compiled in 200ms (352 modules)
 ✓ Compiled /pet-memorial in 184ms (835 modules)
 GET /pet-memorial 200 in 258ms
 ○ Compiling /create-obituary ...
 ✓ Compiled /create-obituary in 526ms (1008 modules)
 GET /create-obituary 200 in 574ms
 GET /create-obituary 200 in 90ms
 GET /create-obituary 200 in 52ms
 ✓ Compiled in 184ms (1022 modules)
 GET /create-obituary 200 in 133ms
 ⚠ Fast Refresh had to perform a full reload due to a runtime error.
 ✓ Compiled in 113ms (452 modules)
 GET /create-obituary 200 in 10ms
 ✓ Compiled /api/memorials in 343ms (977 modules)
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`passwordHash`, `main`.`users`.`avatar`, `main`.`users`.`preferredSystem`, `main`.`users`.`emailVerified`, `main`.`users`.`emailVerifyToken`, `main`.`users`.`resetPasswordToken`, `main`.`users`.`resetPasswordExpires`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query BEGIN IMMEDIATE
prisma:query INSERT INTO `main`.`memorials` (`id`, `title`, `slug`, `type`, `status`, `subjectName`, `subjectType`, `birthDate`, `deathDate`, `breed`, `color`, `gender`, `story`, `creatorName`, `creatorEmail`, `viewCount`, `candleCount`, `messageCount`, `likeCount`, `allowMessages`, `allowCandles`, `isPublic`, `featured`, `createdAt`, `updatedAt`, `authorId`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) RETURNING `id` AS `id`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`id` = ? LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query COMMIT
 POST /api/memorials 200 in 453ms
 ✓ Compiled /community-pet-obituaries in 228ms (1028 modules)
 GET /community-pet-obituaries 200 in 299ms
 GET /community-pet-obituaries 200 in 7ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 16ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 3ms
 ✓ Compiled /community-pet-obituaries/[slug] in 157ms (1029 modules)
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 409ms
 ✓ Compiled /settings in 187ms (1058 modules)
 GET /settings 200 in 216ms
 ✓ Compiled /api/users/[id] in 78ms (1060 modules)
Error: Route "/api/users/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at PATCH (app/api/users/[id]/route.ts:57:12)
  55 | ) {
  56 |   try {
> 57 |     const { id } = params
     |            ^
  58 |     const body = await request.json()
  59 |     
  60 |     // 验证输入数据
 PATCH /api/users/cmdoyqpae0005ptuuxtx44bfi 200 in 352ms
prisma:query SELECT 1
prisma:query UPDATE `main`.`users` SET `preferredSystem` = ?, `updatedAt` = ? WHERE (`main`.`users`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `name` AS `name`, `email` AS `email`, `preferredSystem` AS `preferredSystem`, `createdAt` AS `createdAt`, `lastLoginAt` AS `lastLoginAt`
 ✓ Compiled /pet-memorial in 136ms (630 modules)
 GET /pet-memorial 200 in 244ms
 GET /create-obituary 200 in 9ms
 GET /community-pet-obituaries 200 in 8ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 13ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 3ms
 ✓ Compiled in 142ms (480 modules)
 GET /community-pet-obituaries 200 in 14ms
 GET /community-pet-obituaries 200 in 28ms
 ✓ Compiled in 143ms (1030 modules)
 GET /community-pet-obituaries 200 in 66ms
 ✓ Compiled in 55ms (480 modules)
 GET /community-pet-obituaries 200 in 8ms
 GET /community-pet-obituaries 200 in 27ms
 ✓ Compiled in 107ms (1030 modules)
 GET /community-pet-obituaries 200 in 36ms
 ✓ Compiled in 65ms (480 modules)
 GET /community-pet-obituaries 200 in 5ms
 ✓ Compiled in 54ms (480 modules)
 GET /community-pet-obituaries 200 in 5ms
 ✓ Compiled in 52ms (480 modules)
 GET /community-pet-obituaries 200 in 6ms
 ✓ Compiled in 53ms (480 modules)
 GET /community-pet-obituaries 200 in 6ms
 ✓ Compiled in 53ms (480 modules)
 GET /community-pet-obituaries 200 in 8ms
 ✓ Compiled in 113ms (480 modules)
 GET /community-pet-obituaries 200 in 8ms
 GET /community-pet-obituaries 200 in 26ms
 ✓ Compiled in 127ms (1030 modules)
 GET /community-pet-obituaries 200 in 45ms
 ✓ Compiled in 280ms (1044 modules)
 GET /community-pet-obituaries 200 in 46ms
 ✓ Compiled in 113ms (1044 modules)
 GET /community-pet-obituaries 200 in 25ms
 ✓ Compiled in 181ms (1046 modules)
 GET /community-pet-obituaries 200 in 26ms
 ✓ Compiled in 110ms (1046 modules)
 GET /community-pet-obituaries 200 in 25ms
 ✓ Compiled in 108ms (1046 modules)
 GET /community-pet-obituaries 200 in 36ms
 GET /community-pet-obituaries 200 in 76ms
 ✓ Compiled /api/memorials in 240ms (593 modules)
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 293ms
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 29ms
 GET /settings 200 in 10ms
 ✓ Compiled /dashboard in 257ms (1077 modules)
 GET /dashboard 200 in 294ms
 ✓ Compiled /api/memorials/user/[userId] in 90ms (1079 modules)
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT 1
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 348ms
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 18ms
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 ✓ Compiled /_not-found in 250ms (1083 modules)
 GET /placeholder-memorial.jpg 404 in 305ms
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 11ms
 GET /dashboard 200 in 11ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 36ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 21ms
 GET /placeholder-memorial.jpg 404 in 21ms
 GET /settings 200 in 10ms
 ✓ Compiled in 344ms (1063 modules)
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 68ms
 ✓ Compiled in 136ms (1063 modules)
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 39ms
 ✓ Compiled in 158ms (1063 modules)
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 27ms
 ✓ Compiled in 448ms (1071 modules)
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 47ms
 ✓ Compiled in 157ms (1071 modules)
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 29ms
 ✓ Compiled in 198ms (1069 modules)
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 30ms
 ✓ Compiled in 150ms (1069 modules)
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 30ms
 ✓ Compiled in 160ms (1069 modules)
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 29ms
 ✓ Compiled in 150ms (1069 modules)
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 29ms
 ✓ Compiled in 117ms (1058 modules)
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 30ms
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 29ms
 ✓ Compiled in 177ms (1044 modules)
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 160ms
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 5ms
 ✓ Compiled in 102ms (487 modules)
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 29ms
 ✓ Compiled in 130ms (1044 modules)
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 50ms
 ✓ Compiled in 371ms (1058 modules)
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 45ms
 ✓ Compiled in 136ms (1058 modules)
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 27ms
 ✓ Compiled in 122ms (1058 modules)
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 27ms
 ✓ Compiled in 178ms (1058 modules)
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 28ms
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 68ms
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 20ms
 ✓ Compiled /pet-memorial in 176ms (607 modules)
 GET /pet-memorial 200 in 266ms
 GET /settings 200 in 12ms
 ✓ Compiled /api/memorials/user/[userId] in 143ms (625 modules)
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 218ms
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 18ms
 ✓ Compiled /_not-found in 246ms (1102 modules)
 GET /placeholder-memorial.jpg 404 in 304ms
 GET /placeholder-memorial.jpg 404 in 14ms
 ✓ Compiled / in 84ms (635 modules)
 GET / 200 in 138ms
 GET /pet-memorial 200 in 41ms
 GET /pet-memorial 200 in 16ms
 GET /create-obituary 200 in 9ms
 GET /community-pet-obituaries 200 in 7ms
 ✓ Compiled /api/memorials in 111ms (647 modules)
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 140ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 3ms
 GET /create-obituary 200 in 18ms
 GET /community-pet-obituaries 200 in 6ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 3ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 2ms
 ✓ Compiled /pricing in 173ms (1140 modules)
 GET /pricing 200 in 245ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 14ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 3ms
 GET /pricing 200 in 12ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 6ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 4ms
 GET /community-pet-obituaries 200 in 7ms
 GET /pricing 200 in 14ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 5ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 4ms
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 8ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 4ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 4ms
 GET /community-pet-obituaries/%E5%A4%9A%E5%A4%9A-pet-1753819385162 200 in 6ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 4ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 3ms
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 7ms
 GET /settings 200 in 9ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 32ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 25ms
 GET /placeholder-memorial.jpg 404 in 30ms
 ✓ Compiled /settings/edit/[id] in 386ms (1163 modules)
 GET /settings/edit/cmdp16hff0001pt8lsjeodz8v 200 in 636ms
 ✓ Compiled /api/memorials/[id] in 124ms (1165 modules)
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/[id]/route.ts:37:12)
  35 | ) {
  36 |   try {
> 37 |     const { id } = params
     |            ^
  38 |
  39 |     const memorial = await prisma.memorial.findUnique({
  40 |       where: { id },
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/cmdp16hff0001pt8lsjeodz8v 200 in 382ms
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/[id]/route.ts:37:12)
  35 | ) {
  36 |   try {
> 37 |     const { id } = params
     |            ^
  38 |
  39 |     const memorial = await prisma.memorial.findUnique({
  40 |       where: { id },
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/cmdp16hff0001pt8lsjeodz8v 200 in 19ms
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at PATCH (app/api/memorials/[id]/route.ts:143:12)
  141 | ) {
  142 |   try {
> 143 |     const { id } = params
      |            ^
  144 |     const body = await request.json()
  145 |     
  146 |     // 验证输入数据
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId` FROM `main`.`memorials` WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query BEGIN IMMEDIATE
prisma:query UPDATE `main`.`memorials` SET `subjectName` = ?, `subjectType` = ?, `birthDate` = ?, `deathDate` = ?, `age` = ?, `story` = ?, `memories` = ?, `personalityTraits` = ?, `favoriteThings` = ?, `isPublic` = ?, `breed` = ?, `color` = ?, `gender` = ?, `relationship` = ?, `occupation` = ?, `location` = ?, `creatorName` = ?, `creatorEmail` = ?, `creatorPhone` = ?, `creatorRelation` = ?, `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`id` = ? LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query COMMIT
 PATCH /api/memorials/cmdp16hff0001pt8lsjeodz8v 200 in 45ms
 GET /settings?tab=memorials 200 in 25ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 24ms
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 24ms
 GET /placeholder-memorial.jpg 404 in 35ms
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 9ms
 GET /create-obituary 200 in 11ms
 GET /settings 200 in 6ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 29ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 21ms
 GET /placeholder-memorial.jpg 404 in 15ms
 GET /placeholder-memorial.jpg 404 in 13ms
 GET /settings/edit/cmdp16hff0001pt8lsjeodz8v 200 in 8ms
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/[id]/route.ts:37:12)
  35 | ) {
  36 |   try {
> 37 |     const { id } = params
     |            ^
  38 |
  39 |     const memorial = await prisma.memorial.findUnique({
  40 |       where: { id },
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/cmdp16hff0001pt8lsjeodz8v 200 in 31ms
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/[id]/route.ts:37:12)
  35 | ) {
  36 |   try {
> 37 |     const { id } = params
     |            ^
  38 |
  39 |     const memorial = await prisma.memorial.findUnique({
  40 |       where: { id },
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/cmdp16hff0001pt8lsjeodz8v 200 in 26ms
 GET /settings?tab=memorials 200 in 5ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 21ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 20ms
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /placeholder-memorial.jpg 404 in 15ms
 GET /placeholder-memorial.jpg 404 in 14ms
 GET /settings/edit/cmdp16hff0001pt8lsjeodz8v 200 in 10ms
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/[id]/route.ts:37:12)
  35 | ) {
  36 |   try {
> 37 |     const { id } = params
     |            ^
  38 |
  39 |     const memorial = await prisma.memorial.findUnique({
  40 |       where: { id },
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/cmdp16hff0001pt8lsjeodz8v 200 in 36ms
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/[id]/route.ts:37:12)
  35 | ) {
  36 |   try {
> 37 |     const { id } = params
     |            ^
  38 |
  39 |     const memorial = await prisma.memorial.findUnique({
  40 |       where: { id },
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/cmdp16hff0001pt8lsjeodz8v 200 in 66ms
 ✓ Compiled in 259ms (501 modules)
 GET /settings/edit/cmdp16hff0001pt8lsjeodz8v 200 in 9ms
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at PATCH (app/api/memorials/[id]/route.ts:143:12)
  141 | ) {
  142 |   try {
> 143 |     const { id } = params
      |            ^
  144 |     const body = await request.json()
  145 |     
  146 |     // 验证输入数据
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId` FROM `main`.`memorials` WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query BEGIN IMMEDIATE
prisma:query UPDATE `main`.`memorials` SET `subjectName` = ?, `subjectType` = ?, `birthDate` = ?, `deathDate` = ?, `age` = ?, `story` = ?, `memories` = ?, `personalityTraits` = ?, `favoriteThings` = ?, `isPublic` = ?, `breed` = ?, `color` = ?, `gender` = ?, `relationship` = ?, `occupation` = ?, `location` = ?, `creatorName` = ?, `creatorEmail` = ?, `creatorPhone` = ?, `creatorRelation` = ?, `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`id` = ? LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query COMMIT
 PATCH /api/memorials/cmdp16hff0001pt8lsjeodz8v 200 in 32ms
 GET /settings?tab=memorials 200 in 6ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 22ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 21ms
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /placeholder-memorial.jpg 404 in 17ms
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 6ms
 GET /community-pet-obituaries 200 in 8ms
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 4ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 4ms
 GET /settings 200 in 7ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 20ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 18ms
 GET /placeholder-memorial.jpg 404 in 14ms
 GET /settings/edit/cmdoys2fe0007ptuuakpfr772 200 in 7ms
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/[id]/route.ts:37:12)
  35 | ) {
  36 |   try {
> 37 |     const { id } = params
     |            ^
  38 |
  39 |     const memorial = await prisma.memorial.findUnique({
  40 |       where: { id },
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
 GET /api/memorials/cmdoys2fe0007ptuuakpfr772 200 in 26ms
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/[id]/route.ts:37:12)
  35 | ) {
  36 |   try {
> 37 |     const { id } = params
     |            ^
  38 |
  39 |     const memorial = await prisma.memorial.findUnique({
  40 |       where: { id },
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/cmdoys2fe0007ptuuakpfr772 200 in 27ms
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at PATCH (app/api/memorials/[id]/route.ts:143:12)
  141 | ) {
  142 |   try {
> 143 |     const { id } = params
      |            ^
  144 |     const body = await request.json()
  145 |     
  146 |     // 验证输入数据
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId` FROM `main`.`memorials` WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query BEGIN IMMEDIATE
prisma:query UPDATE `main`.`memorials` SET `subjectName` = ?, `subjectType` = ?, `birthDate` = ?, `deathDate` = ?, `age` = ?, `story` = ?, `memories` = ?, `personalityTraits` = ?, `favoriteThings` = ?, `isPublic` = ?, `breed` = ?, `color` = ?, `gender` = ?, `relationship` = ?, `occupation` = ?, `location` = ?, `creatorName` = ?, `creatorEmail` = ?, `creatorPhone` = ?, `creatorRelation` = ?, `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`id` = ? LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query COMMIT
 PATCH /api/memorials/cmdoys2fe0007ptuuakpfr772 200 in 32ms
 GET /settings?tab=memorials 200 in 5ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 20ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 21ms
 GET /placeholder-memorial.jpg 404 in 16ms
 GET /settings/edit/cmdoys2fe0007ptuuakpfr772 200 in 6ms
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/[id]/route.ts:37:12)
  35 | ) {
  36 |   try {
> 37 |     const { id } = params
     |            ^
  38 |
  39 |     const memorial = await prisma.memorial.findUnique({
  40 |       where: { id },
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
 GET /api/memorials/cmdoys2fe0007ptuuakpfr772 200 in 24ms
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/[id]/route.ts:37:12)
  35 | ) {
  36 |   try {
> 37 |     const { id } = params
     |            ^
  38 |
  39 |     const memorial = await prisma.memorial.findUnique({
  40 |       where: { id },
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/cmdoys2fe0007ptuuakpfr772 200 in 23ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 19ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 20ms
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /placeholder-memorial.jpg 404 in 15ms
 GET /community-pet-obituaries/%E5%A4%9A%E5%A4%9A-pet-1753819385162 200 in 7ms
 ⚠ Fast Refresh had to perform a full reload due to a runtime error.
 ✓ Compiled in 297ms (1082 modules)
 ⨯ ReferenceError: petData is not defined
    at PetMemorialPage (app/community-pet-obituaries/[slug]/page.tsx:150:2)
  148 |   }, [params.slug])
  149 |
> 150 |   if (!petData) {
      |  ^
  151 |     return <div>Loading...</div>
  152 |   }
  153 | {
  digest: '632771231'
}
 GET /community-pet-obituaries/%E5%A4%9A%E5%A4%9A-pet-1753819385162 200 in 219ms
 ⚠ Fast Refresh had to perform a full reload due to a runtime error.
 ✓ Compiled in 180ms (1082 modules)
 ⨯ ReferenceError: petData is not defined
    at PetMemorialPage (app/community-pet-obituaries/[slug]/page.tsx:116:2)
  114 |   }, [params.slug])
  115 |
> 116 |   if (!petData) {
      |  ^
  117 |     return <div>Loading...</div>
  118 |   }
  119 | {
  digest: '632771231'
}
 GET /community-pet-obituaries/%E5%A4%9A%E5%A4%9A-pet-1753819385162 200 in 138ms
 ⚠ Fast Refresh had to perform a full reload due to a runtime error.
 ✓ Compiled in 169ms (1082 modules)
 GET /community-pet-obituaries/%E5%A4%9A%E5%A4%9A-pet-1753819385162 200 in 99ms
 ✓ Compiled /api/memorials/slug/[slug] in 198ms (1086 modules)
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { slug },
prisma:query SELECT 1
Get memorial by slug error: Error [PrismaClientValidationError]: 
Invalid `prisma.memorial.findUnique()` invocation:

{
  where: {
    slug: "多多-pet-1753819385162"
  },
  include: {
    creator: {
    ~~~~~~~
      select: {
        id: true,
        name: true,
        email: true
      }
    },
    images: {
      orderBy: [
        {
          isPrimary: "desc"
        },
        {
          createdAt: "asc"
        }
      ]
    },
    messages: {
      include: {
        author: {
          select: {
            id: true,
            name: true
          }
        }
      },
      orderBy: {
        createdAt: "desc"
      }
    },
    candles: {
      include: {
        lighter: {
          select: {
            id: true,
            name: true
          }
        }
      },
      orderBy: {
        createdAt: "desc"
      }
    },
    likes: {
      include: {
        user: {
          select: {
            id: true,
            name: true
          }
        }
      }
    },
    tags: true,
    _count: {
      select: {
        messages: true,
        candles: true,
        likes: true
      }
    },
?   author?: true
  }
}

Unknown field `creator` for include statement on model `Memorial`. Available options are marked with ?.
    at async GET (app/api/memorials/slug/[slug]/route.ts:12:21)
  10 |     const { slug } = params
  11 |
> 12 |     const memorial = await prisma.memorial.findUnique({
     |                     ^
  13 |       where: { slug },
  14 |       include: {
  15 |         creator: { {
  clientVersion: '6.13.0'
}
 GET /api/memorials/slug/%E5%A4%9A%E5%A4%9A-pet-1753819385162 500 in 510ms
 ✓ Compiled in 174ms (1100 modules)
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { slug },
Get memorial by slug error: Error [PrismaClientValidationError]: 
Invalid `prisma.memorial.findUnique()` invocation:

{
  where: {
    slug: "多多-pet-1753819385162"
  },
  include: {
    creator: {
    ~~~~~~~
      select: {
        id: true,
        name: true,
        email: true
      }
    },
    images: {
      orderBy: [
        {
          isPrimary: "desc"
        },
        {
          createdAt: "asc"
        }
      ]
    },
    messages: {
      include: {
        author: {
          select: {
            id: true,
            name: true
          }
        }
      },
      orderBy: {
        createdAt: "desc"
      }
    },
    candles: {
      include: {
        lighter: {
          select: {
            id: true,
            name: true
          }
        }
      },
      orderBy: {
        createdAt: "desc"
      }
    },
    likes: {
      include: {
        user: {
          select: {
            id: true,
            name: true
          }
        }
      }
    },
    tags: true,
    _count: {
      select: {
        messages: true,
        candles: true,
        likes: true
      }
    },
?   author?: true
  }
}

Unknown field `creator` for include statement on model `Memorial`. Available options are marked with ?.
    at async GET (app/api/memorials/slug/[slug]/route.ts:12:21)
  10 |     const { slug } = params
  11 |
> 12 |     const memorial = await prisma.memorial.findUnique({
     |                     ^
  13 |       where: { slug },
  14 |       include: {
  15 |         creator: { {
  clientVersion: '6.13.0'
}
 GET /api/memorials/slug/%E5%A4%9A%E5%A4%9A-pet-1753819385162 500 in 80ms
 GET /community-pet-obituaries/%E5%A4%9A%E5%A4%9A-pet-1753819385162 200 in 99ms
 ✓ Compiled in 165ms (1100 modules)
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { slug },
Get memorial by slug error: Error [PrismaClientValidationError]: 
Invalid `prisma.memorial.findUnique()` invocation:

{
  where: {
    slug: "多多-pet-1753819385162"
  },
  include: {
    creator: {
    ~~~~~~~
      select: {
        id: true,
        name: true,
        email: true
      }
    },
    images: {
      orderBy: [
        {
          isPrimary: "desc"
        },
        {
          createdAt: "asc"
        }
      ]
    },
    messages: {
      include: {
        author: {
          select: {
            id: true,
            name: true
          }
        }
      },
      orderBy: {
        createdAt: "desc"
      }
    },
    candles: {
      include: {
        lighter: {
          select: {
            id: true,
            name: true
          }
        }
      },
      orderBy: {
        createdAt: "desc"
      }
    },
    likes: {
      include: {
        user: {
          select: {
            id: true,
            name: true
          }
        }
      }
    },
    tags: true,
    _count: {
      select: {
        messages: true,
        candles: true,
        likes: true
      }
    },
?   author?: true
  }
}

Unknown field `creator` for include statement on model `Memorial`. Available options are marked with ?.
    at async GET (app/api/memorials/slug/[slug]/route.ts:12:21)
  10 |     const { slug } = params
  11 |
> 12 |     const memorial = await prisma.memorial.findUnique({
     |                     ^
  13 |       where: { slug },
  14 |       include: {
  15 |         creator: { {
  clientVersion: '6.13.0'
}
 GET /api/memorials/slug/%E5%A4%9A%E5%A4%9A-pet-1753819385162 500 in 103ms
prisma:query SELECT 1
 GET /community-pet-obituaries/%E5%A4%9A%E5%A4%9A-pet-1753819385162 200 in 136ms
 ✓ Compiled in 147ms (1100 modules)
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { slug },
Get memorial by slug error: Error [PrismaClientValidationError]: 
Invalid `prisma.memorial.findUnique()` invocation:

{
  where: {
    slug: "多多-pet-1753819385162"
  },
  include: {
    creator: {
    ~~~~~~~
      select: {
        id: true,
        name: true,
        email: true
      }
    },
    images: {
      orderBy: [
        {
          isPrimary: "desc"
        },
        {
          createdAt: "asc"
        }
      ]
    },
    messages: {
      include: {
        author: {
          select: {
            id: true,
            name: true
          }
        }
      },
      orderBy: {
        createdAt: "desc"
      }
    },
    candles: {
      include: {
        lighter: {
          select: {
            id: true,
            name: true
          }
        }
      },
      orderBy: {
        createdAt: "desc"
      }
    },
    likes: {
      include: {
        user: {
          select: {
            id: true,
            name: true
          }
        }
      }
    },
    tags: true,
    _count: {
      select: {
        messages: true,
        candles: true,
        likes: true
      }
    },
?   author?: true
  }
}

Unknown field `creator` for include statement on model `Memorial`. Available options are marked with ?.
    at async GET (app/api/memorials/slug/[slug]/route.ts:12:21)
  10 |     const { slug } = params
  11 |
> 12 |     const memorial = await prisma.memorial.findUnique({
     |                     ^
  13 |       where: { slug },
  14 |       include: {
  15 |         creator: { {
  clientVersion: '6.13.0'
}
 GET /api/memorials/slug/%E5%A4%9A%E5%A4%9A-pet-1753819385162 500 in 72ms
 GET /community-pet-obituaries/%E5%A4%9A%E5%A4%9A-pet-1753819385162 200 in 84ms
 ✓ Compiled in 134ms (1100 modules)
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { slug },
prisma:query SELECT 1
Get memorial by slug error: Error [PrismaClientValidationError]: 
Invalid `prisma.memorial.findUnique()` invocation:

{
  where: {
    slug: "多多-pet-1753819385162"
  },
  include: {
    creator: {
    ~~~~~~~
      select: {
        id: true,
        name: true,
        email: true
      }
    },
    images: {
      orderBy: [
        {
          isPrimary: "desc"
        },
        {
          createdAt: "asc"
        }
      ]
    },
    messages: {
      include: {
        author: {
          select: {
            id: true,
            name: true
          }
        }
      },
      orderBy: {
        createdAt: "desc"
      }
    },
    candles: {
      include: {
        lighter: {
          select: {
            id: true,
            name: true
          }
        }
      },
      orderBy: {
        createdAt: "desc"
      }
    },
    likes: {
      include: {
        user: {
          select: {
            id: true,
            name: true
          }
        }
      }
    },
    tags: true,
    _count: {
      select: {
        messages: true,
        candles: true,
        likes: true
      }
    },
?   author?: true
  }
}

Unknown field `creator` for include statement on model `Memorial`. Available options are marked with ?.
    at async GET (app/api/memorials/slug/[slug]/route.ts:12:21)
  10 |     const { slug } = params
  11 |
> 12 |     const memorial = await prisma.memorial.findUnique({
     |                     ^
  13 |       where: { slug },
  14 |       include: {
  15 |         creator: { {
  clientVersion: '6.13.0'
}
 GET /api/memorials/slug/%E5%A4%9A%E5%A4%9A-pet-1753819385162 500 in 68ms
 GET /community-pet-obituaries/%E5%A4%9A%E5%A4%9A-pet-1753819385162 200 in 86ms
 ✓ Compiled in 156ms (1100 modules)
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { slug },
Get memorial by slug error: Error [PrismaClientValidationError]: 
Invalid `prisma.memorial.findUnique()` invocation:

{
  where: {
    slug: "多多-pet-1753819385162"
  },
  include: {
    creator: {
    ~~~~~~~
      select: {
        id: true,
        name: true,
        email: true
      }
    },
    images: {
      orderBy: [
        {
          isPrimary: "desc"
        },
        {
          createdAt: "asc"
        }
      ]
    },
    messages: {
      include: {
        author: {
          select: {
            id: true,
            name: true
          }
        }
      },
      orderBy: {
        createdAt: "desc"
      }
    },
    candles: {
      include: {
        lighter: {
          select: {
            id: true,
            name: true
          }
        }
      },
      orderBy: {
        createdAt: "desc"
      }
    },
    likes: {
      include: {
        user: {
          select: {
            id: true,
            name: true
          }
        }
      }
    },
    tags: true,
    _count: {
      select: {
        messages: true,
        candles: true,
        likes: true
      }
    },
?   author?: true
  }
}

Unknown field `creator` for include statement on model `Memorial`. Available options are marked with ?.
    at async GET (app/api/memorials/slug/[slug]/route.ts:12:21)
  10 |     const { slug } = params
  11 |
> 12 |     const memorial = await prisma.memorial.findUnique({
     |                     ^
  13 |       where: { slug },
  14 |       include: {
  15 |         creator: { {
  clientVersion: '6.13.0'
}
 GET /api/memorials/slug/%E5%A4%9A%E5%A4%9A-pet-1753819385162 500 in 71ms
 GET /community-pet-obituaries/%E5%A4%9A%E5%A4%9A-pet-1753819385162 200 in 86ms
 ✓ Compiled in 134ms (1100 modules)
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { slug },
prisma:query SELECT 1
Get memorial by slug error: Error [PrismaClientValidationError]: 
Invalid `prisma.memorial.findUnique()` invocation:

{
  where: {
    slug: "多多-pet-1753819385162"
  },
  include: {
    creator: {
    ~~~~~~~
      select: {
        id: true,
        name: true,
        email: true
      }
    },
    images: {
      orderBy: [
        {
          isPrimary: "desc"
        },
        {
          createdAt: "asc"
        }
      ]
    },
    messages: {
      include: {
        author: {
          select: {
            id: true,
            name: true
          }
        }
      },
      orderBy: {
        createdAt: "desc"
      }
    },
    candles: {
      include: {
        lighter: {
          select: {
            id: true,
            name: true
          }
        }
      },
      orderBy: {
        createdAt: "desc"
      }
    },
    likes: {
      include: {
        user: {
          select: {
            id: true,
            name: true
          }
        }
      }
    },
    tags: true,
    _count: {
      select: {
        messages: true,
        candles: true,
        likes: true
      }
    },
?   author?: true
  }
}

Unknown field `creator` for include statement on model `Memorial`. Available options are marked with ?.
    at async GET (app/api/memorials/slug/[slug]/route.ts:12:21)
  10 |     const { slug } = params
  11 |
> 12 |     const memorial = await prisma.memorial.findUnique({
     |                     ^
  13 |       where: { slug },
  14 |       include: {
  15 |         creator: { {
  clientVersion: '6.13.0'
}
 GET /api/memorials/slug/%E5%A4%9A%E5%A4%9A-pet-1753819385162 500 in 67ms
 GET /community-pet-obituaries/%E5%A4%9A%E5%A4%9A-pet-1753819385162 200 in 87ms
 ✓ Compiled in 109ms (1100 modules)
 GET /community-pet-obituaries/%E5%A4%9A%E5%A4%9A-pet-1753819385162 200 in 26ms
 ✓ Compiled in 111ms (1100 modules)
 GET /community-pet-obituaries/%E5%A4%9A%E5%A4%9A-pet-1753819385162 200 in 33ms
 ✓ Compiled in 71ms (498 modules)
 GET /community-pet-obituaries/%E5%A4%9A%E5%A4%9A-pet-1753819385162 200 in 7ms
 ✓ Compiled in 61ms (498 modules)
 GET /community-pet-obituaries/%E5%A4%9A%E5%A4%9A-pet-1753819385162 200 in 6ms
 ✓ Compiled in 60ms (498 modules)
 GET /community-pet-obituaries/%E5%A4%9A%E5%A4%9A-pet-1753819385162 200 in 13ms
 ✓ Compiled in 61ms (498 modules)
 GET /community-pet-obituaries/%E5%A4%9A%E5%A4%9A-pet-1753819385162 200 in 7ms
 GET /settings?tab=memorials 200 in 12ms
 ✓ Compiled /api/memorials/user/[userId] in 160ms (602 modules)
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 206ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 20ms
 ✓ Compiled /_not-found in 356ms (1090 modules)
 GET /placeholder-memorial.jpg 404 in 419ms
 GET /community-pet-obituaries/%E5%A4%9A%E5%A4%9A-pet-1753819385162 200 in 9ms
 ✓ Compiled /api/memorials/slug/[slug] in 61ms (605 modules)
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/%E5%A4%9A%E5%A4%9A-pet-1753819385162 200 in 106ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/%E5%A4%9A%E5%A4%9A-pet-1753819385162 200 in 20ms
 GET /community-pet-obituaries 200 in 24ms
 ✓ Compiled /api/memorials in 134ms (617 modules)
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 162ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 3ms
 GET /settings 200 in 18ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 26ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 18ms
 GET /placeholder-memorial.jpg 404 in 25ms
 GET /community-pet-obituaries/%E5%A4%9A%E5%A4%9A-pet-1753819385162 200 in 7ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/%E5%A4%9A%E5%A4%9A-pet-1753819385162 200 in 23ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/%E5%A4%9A%E5%A4%9A-pet-1753819385162 200 in 21ms
 GET /community-pet-obituaries 200 in 10ms
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 4ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 4ms
 GET /settings 200 in 5ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 32ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 25ms
 GET /placeholder-memorial.jpg 404 in 14ms
 GET /settings/edit/cmdp16hff0001pt8lsjeodz8v 200 in 9ms
 ✓ Compiled /api/memorials/[id] in 159ms (619 modules)
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/[id]/route.ts:37:12)
  35 | ) {
  36 |   try {
> 37 |     const { id } = params
     |            ^
  38 |
  39 |     const memorial = await prisma.memorial.findUnique({
  40 |       where: { id },
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/cmdp16hff0001pt8lsjeodz8v 200 in 207ms
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/[id]/route.ts:37:12)
  35 | ) {
  36 |   try {
> 37 |     const { id } = params
     |            ^
  38 |
  39 |     const memorial = await prisma.memorial.findUnique({
  40 |       where: { id },
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/cmdp16hff0001pt8lsjeodz8v 200 in 21ms
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at PATCH (app/api/memorials/[id]/route.ts:143:12)
  141 | ) {
  142 |   try {
> 143 |     const { id } = params
      |            ^
  144 |     const body = await request.json()
  145 |     
  146 |     // 验证输入数据
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId` FROM `main`.`memorials` WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 PATCH /api/memorials/cmdp16hff0001pt8lsjeodz8v 200 in 27ms
prisma:query BEGIN IMMEDIATE
prisma:query UPDATE `main`.`memorials` SET `subjectName` = ?, `subjectType` = ?, `birthDate` = ?, `deathDate` = ?, `age` = ?, `story` = ?, `memories` = ?, `personalityTraits` = ?, `favoriteThings` = ?, `isPublic` = ?, `breed` = ?, `color` = ?, `gender` = ?, `relationship` = ?, `occupation` = ?, `location` = ?, `creatorName` = ?, `creatorEmail` = ?, `creatorPhone` = ?, `creatorRelation` = ?, `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`id` = ? LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query COMMIT
 GET /settings?tab=memorials 200 in 25ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 22ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 21ms
 GET /placeholder-memorial.jpg 404 in 26ms
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 6ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/1-pet-1753823417018 200 in 21ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/1-pet-1753823417018 200 in 21ms
 GET /create-obituary 200 in 11ms
Create memorial error: Error [ZodError]: [
  {
    "validation": "email",
    "code": "invalid_string",
    "message": "邮箱格式不正确",
    "path": [
      "creatorEmail"
    ]
  }
]
    at POST (app/api/memorials/route.ts:41:47)
  39 |     
  40 |     // 验证输入数据
> 41 |     const validatedData = createMemorialSchema.parse(body)
     |                                               ^
  42 |
  43 |     // 验证创建者是否存在
  44 |     const author = await prisma.user.findUnique({ {
  issues: [Array],
  addIssue: [Function (anonymous)],
  addIssues: [Function (anonymous)]
}
 POST /api/memorials 400 in 34ms
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`passwordHash`, `main`.`users`.`avatar`, `main`.`users`.`preferredSystem`, `main`.`users`.`emailVerified`, `main`.`users`.`emailVerifyToken`, `main`.`users`.`resetPasswordToken`, `main`.`users`.`resetPasswordExpires`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query BEGIN IMMEDIATE
prisma:query INSERT INTO `main`.`memorials` (`id`, `title`, `slug`, `type`, `status`, `subjectName`, `subjectType`, `birthDate`, `deathDate`, `breed`, `color`, `gender`, `story`, `creatorName`, `creatorEmail`, `viewCount`, `candleCount`, `messageCount`, `likeCount`, `allowMessages`, `allowCandles`, `isPublic`, `featured`, `createdAt`, `updatedAt`, `authorId`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) RETURNING `id` AS `id`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`id` = ? LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query COMMIT
 POST /api/memorials 200 in 6ms
 GET /community-pet-obituaries 200 in 7ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 3ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 4ms
 GET /community-pet-obituaries/12321-pet-1753896175091 200 in 7ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/12321-pet-1753896175091 200 in 26ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/12321-pet-1753896175091 200 in 26ms
 GET /settings 200 in 5ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 20ms
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?) LIMIT ? OFFSET ?
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 18ms
 GET /placeholder-memorial.jpg 404 in 15ms
 GET /settings/edit/cmdq8hxx00003pt8ltt7paega 200 in 7ms
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/[id]/route.ts:37:12)
  35 | ) {
  36 |   try {
> 37 |     const { id } = params
     |            ^
  38 |
  39 |     const memorial = await prisma.memorial.findUnique({
  40 |       where: { id },
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
 GET /api/memorials/cmdq8hxx00003pt8ltt7paega 200 in 24ms
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/[id]/route.ts:37:12)
  35 | ) {
  36 |   try {
> 37 |     const { id } = params
     |            ^
  38 |
  39 |     const memorial = await prisma.memorial.findUnique({
  40 |       where: { id },
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/cmdq8hxx00003pt8ltt7paega 200 in 21ms
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at PATCH (app/api/memorials/[id]/route.ts:143:12)
  141 | ) {
  142 |   try {
> 143 |     const { id } = params
      |            ^
  144 |     const body = await request.json()
  145 |     
  146 |     // 验证输入数据
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId` FROM `main`.`memorials` WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query BEGIN IMMEDIATE
prisma:query UPDATE `main`.`memorials` SET `subjectName` = ?, `subjectType` = ?, `birthDate` = ?, `deathDate` = ?, `age` = ?, `story` = ?, `memories` = ?, `personalityTraits` = ?, `favoriteThings` = ?, `isPublic` = ?, `breed` = ?, `color` = ?, `gender` = ?, `relationship` = ?, `occupation` = ?, `location` = ?, `creatorName` = ?, `creatorEmail` = ?, `creatorPhone` = ?, `creatorRelation` = ?, `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`id` = ? LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query COMMIT
 PATCH /api/memorials/cmdq8hxx00003pt8ltt7paega 200 in 32ms
 GET /settings?tab=memorials 200 in 5ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 24ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 22ms
 GET /placeholder-memorial.jpg 404 in 15ms
 GET /community-pet-obituaries/12321-pet-1753896175091 200 in 6ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/12321-pet-1753896175091 200 in 24ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/12321-pet-1753896175091 200 in 24ms
 GET /create-obituary 200 in 7ms
 GET /community-pet-obituaries 200 in 5ms
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 3ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 3ms
 GET /community-pet-obituaries/%E5%A4%9A%E5%A4%9A-pet-1753819385162 200 in 6ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/%E5%A4%9A%E5%A4%9A-pet-1753819385162 200 in 25ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/%E5%A4%9A%E5%A4%9A-pet-1753819385162 200 in 22ms
 GET /community-pet-obituaries 200 in 5ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 3ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 3ms
 GET /community-pet-obituaries/1-pet-1753823417018 200 in 6ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/1-pet-1753823417018 200 in 21ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/1-pet-1753823417018 200 in 23ms
 GET /create-obituary 200 in 5ms
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`passwordHash`, `main`.`users`.`avatar`, `main`.`users`.`preferredSystem`, `main`.`users`.`emailVerified`, `main`.`users`.`emailVerifyToken`, `main`.`users`.`resetPasswordToken`, `main`.`users`.`resetPasswordExpires`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query BEGIN IMMEDIATE
prisma:query INSERT INTO `main`.`memorials` (`id`, `title`, `slug`, `type`, `status`, `subjectName`, `subjectType`, `birthDate`, `deathDate`, `breed`, `color`, `gender`, `story`, `creatorName`, `creatorEmail`, `viewCount`, `candleCount`, `messageCount`, `likeCount`, `allowMessages`, `allowCandles`, `isPublic`, `featured`, `createdAt`, `updatedAt`, `authorId`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) RETURNING `id` AS `id`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`id` = ? LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query COMMIT
 POST /api/memorials 200 in 4ms
 GET /community-pet-obituaries 200 in 4ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 4ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 2ms
 GET /community-pet-obituaries/1111-pet-1753896319303 200 in 6ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/1111-pet-1753896319303 200 in 28ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/1111-pet-1753896319303 200 in 22ms
 GET /settings 200 in 5ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 23ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 19ms
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?) LIMIT ? OFFSET ?
 GET /placeholder-memorial.jpg 404 in 15ms
 GET /community-pet-obituaries/12321-pet-1753896175091 200 in 6ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/12321-pet-1753896175091 200 in 26ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/12321-pet-1753896175091 200 in 25ms
 GET /create-obituary 200 in 8ms
 GET /community-pet-obituaries 200 in 4ms
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 3ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 2ms
 GET /create-obituary 200 in 5ms
 GET /community-pet-obituaries 200 in 6ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 5ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 4ms
 GET /community-pet-obituaries/1111-pet-1753896319303 200 in 6ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/1111-pet-1753896319303 200 in 23ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/1111-pet-1753896319303 200 in 23ms
 ✓ Compiled /pricing in 291ms (649 modules)
 GET /pricing 200 in 377ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/1111-pet-1753896319303 200 in 31ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/1111-pet-1753896319303 200 in 23ms
 GET /community-pet-obituaries 200 in 7ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 12ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 3ms
 GET /pricing 200 in 12ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 4ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 3ms
 GET /settings 200 in 8ms
 ✓ Compiled /api/memorials/user/[userId] in 67ms (651 modules)
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 111ms
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?) LIMIT ? OFFSET ?
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 18ms
 ✓ Compiled /_not-found in 182ms (1153 modules)
 GET /placeholder-memorial.jpg 404 in 236ms
 GET /settings 200 in 57ms
 ✓ Compiled /api/users/[id] in 122ms (654 modules)
Error: Route "/api/users/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at PATCH (app/api/users/[id]/route.ts:57:12)
  55 | ) {
  56 |   try {
> 57 |     const { id } = params
     |            ^
  58 |     const body = await request.json()
  59 |     
  60 |     // 验证输入数据
prisma:query UPDATE `main`.`users` SET `preferredSystem` = ?, `updatedAt` = ? WHERE (`main`.`users`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `name` AS `name`, `email` AS `email`, `preferredSystem` AS `preferredSystem`, `createdAt` AS `createdAt`, `lastLoginAt` AS `lastLoginAt`
 PATCH /api/users/cmdoyqpae0005ptuuxtx44bfi 200 in 167ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 21ms
 ✓ Compiled /human-memorial in 163ms (1172 modules)
 GET /human-memorial 200 in 252ms
 GET /human-memorial 200 in 17ms
 ✓ Compiled /create-person-obituary in 168ms (1167 modules)
 GET /create-person-obituary 200 in 229ms
 ✓ Compiled /community-person-obituaries in 209ms (1173 modules)
 GET /community-person-obituaries 200 in 264ms
 GET /community-person-obituaries/%E7%8E%8B%E5%8D%8E-parent-2023-h2 404 in 6ms
 GET /community-person-obituaries/%E7%8E%8B%E5%8D%8E-parent-2023-h2 404 in 23ms
 GET /community-person-obituaries 200 in 67ms
 GET /settings 200 in 15ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 25ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 18ms
Error: Route "/api/users/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at PATCH (app/api/users/[id]/route.ts:57:12)
  55 | ) {
  56 |   try {
> 57 |     const { id } = params
     |            ^
  58 |     const body = await request.json()
  59 |     
  60 |     // 验证输入数据
prisma:query UPDATE `main`.`users` SET `preferredSystem` = ?, `updatedAt` = ? WHERE (`main`.`users`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `name` AS `name`, `email` AS `email`, `preferredSystem` AS `preferredSystem`, `createdAt` AS `createdAt`, `lastLoginAt` AS `lastLoginAt`
 PATCH /api/users/cmdoyqpae0005ptuuxtx44bfi 200 in 37ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 26ms
 ✓ Compiled /pet-memorial in 108ms (685 modules)
 GET /pet-memorial 200 in 159ms
 GET /community-pet-obituaries 200 in 9ms
 GET /api/memorials?type=PET&limit=20 200 in 15ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=20 200 in 2ms
 ✓ Compiled in 341ms (1085 modules)
 GET /community-pet-obituaries 200 in 64ms
 ✓ Compiled in 143ms (1085 modules)
 GET /community-pet-obituaries 200 in 42ms
 ✓ Compiled in 137ms (1085 modules)
 GET /community-pet-obituaries 200 in 24ms
 ✓ Compiled in 340ms (1085 modules)
 GET /community-pet-obituaries 200 in 47ms
 ✓ Compiled in 507ms (1087 modules)
 GET /community-pet-obituaries 200 in 48ms
 ✓ Compiled in 249ms (1087 modules)
 GET /community-pet-obituaries 200 in 40ms
 ✓ Compiled in 179ms (1087 modules)
 GET /community-pet-obituaries 200 in 26ms
 ✓ Compiled in 342ms (1087 modules)
 GET /community-pet-obituaries 200 in 27ms
 ✓ Compiled /api/memorials in 164ms (613 modules)
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 224ms
 GET /community-pet-obituaries 200 in 81ms
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 3ms
 ✓ Compiled /pet-memorial in 144ms (649 modules)
 GET /pet-memorial 200 in 237ms
 GET /create-obituary 200 in 10ms
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`passwordHash`, `main`.`users`.`avatar`, `main`.`users`.`preferredSystem`, `main`.`users`.`emailVerified`, `main`.`users`.`emailVerifyToken`, `main`.`users`.`resetPasswordToken`, `main`.`users`.`resetPasswordExpires`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query BEGIN IMMEDIATE
prisma:query INSERT INTO `main`.`memorials` (`id`, `title`, `slug`, `type`, `status`, `subjectName`, `subjectType`, `birthDate`, `deathDate`, `breed`, `color`, `gender`, `story`, `creatorName`, `creatorEmail`, `viewCount`, `candleCount`, `messageCount`, `likeCount`, `allowMessages`, `allowCandles`, `isPublic`, `featured`, `createdAt`, `updatedAt`, `authorId`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) RETURNING `id` AS `id`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`id` = ? LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query COMMIT
 POST /api/memorials 200 in 16ms
 GET /community-pet-obituaries 200 in 7ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 3ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 4ms
 GET /community-pet-obituaries/564165-pet-1753897085476 200 in 10ms
 ✓ Compiled /api/memorials/slug/[slug] in 148ms (615 modules)
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/564165-pet-1753897085476 200 in 227ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/564165-pet-1753897085476 200 in 22ms
 GET /create-obituary 200 in 26ms
 ✓ Compiled /pet-memorial in 65ms (651 modules)
 GET /pet-memorial 200 in 162ms
 GET /create-obituary 200 in 7ms
 GET /community-pet-obituaries 200 in 6ms
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 12ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 3ms
 ✓ Compiled /pricing in 158ms (667 modules)
 GET /pricing 200 in 208ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 15ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 2ms
 GET /community-pet-obituaries/12321-pet-1753896175091 200 in 7ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/12321-pet-1753896175091 200 in 23ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/12321-pet-1753896175091 200 in 20ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 4ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 3ms
 GET /settings 200 in 12ms
 ✓ Compiled /api/memorials/user/[userId] in 155ms (603 modules)
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 225ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 21ms
 ✓ Compiled /_not-found in 333ms (1109 modules)
 GET /placeholder-memorial.jpg 404 in 408ms
 GET /settings 200 in 13ms
 GET /settings/edit/cmdq91gdg0007pt8lsucz3v0j 200 in 9ms
 ✓ Compiled /api/memorials/[id] in 156ms (616 modules)
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/[id]/route.ts:37:12)
  35 | ) {
  36 |   try {
> 37 |     const { id } = params
     |            ^
  38 |
  39 |     const memorial = await prisma.memorial.findUnique({
  40 |       where: { id },
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/cmdq91gdg0007pt8lsucz3v0j 200 in 215ms
Error: Route "/api/memorials/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/[id]/route.ts:37:12)
  35 | ) {
  36 |   try {
> 37 |     const { id } = params
     |            ^
  38 |
  39 |     const memorial = await prisma.memorial.findUnique({
  40 |       where: { id },
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/cmdq91gdg0007pt8lsucz3v0j 200 in 18ms
 GET /settings?tab=memorials 200 in 23ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 25ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 18ms
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?) LIMIT ? OFFSET ?
 GET /placeholder-memorial.jpg 404 in 29ms
 ✓ Compiled /api/users/[id] in 170ms (616 modules)
Error: Route "/api/users/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at PATCH (app/api/users/[id]/route.ts:57:12)
  55 | ) {
  56 |   try {
> 57 |     const { id } = params
     |            ^
  58 |     const body = await request.json()
  59 |     
  60 |     // 验证输入数据
prisma:query UPDATE `main`.`users` SET `preferredSystem` = ?, `updatedAt` = ? WHERE (`main`.`users`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `name` AS `name`, `email` AS `email`, `preferredSystem` AS `preferredSystem`, `createdAt` AS `createdAt`, `lastLoginAt` AS `lastLoginAt`
 PATCH /api/users/cmdoyqpae0005ptuuxtx44bfi 200 in 217ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 21ms
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?) LIMIT ? OFFSET ?
 ✓ Compiled /human-memorial in 211ms (652 modules)
 GET /human-memorial 200 in 333ms
 ✓ Compiled /create-person-obituary in 82ms (658 modules)
 GET /create-person-obituary 200 in 122ms
 ✓ Compiled in 269ms (1163 modules)
 GET /create-person-obituary 200 in 34ms
 ✓ Compiled in 190ms (1163 modules)
 GET /create-person-obituary 200 in 26ms
 ✓ Compiled in 183ms (1150 modules)
 GET /create-person-obituary 200 in 72ms
 ✓ Compiled in 385ms (1080 modules)
 GET /create-person-obituary 200 in 65ms
 GET /settings 200 in 10ms
 ✓ Compiled /api/memorials/user/[userId] in 106ms (596 modules)
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 212ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 19ms
 ✓ Compiled /_not-found in 154ms (1088 modules)
 GET /placeholder-memorial.jpg 404 in 210ms
 GET /placeholder-memorial.jpg 404 in 14ms
 GET /placeholder-memorial.jpg 404 in 16ms
 GET /placeholder-memorial.jpg 404 in 14ms
 GET /create-person-obituary 200 in 8ms
 GET /create-person-obituary 200 in 5ms
 ✓ Compiled /community-person-obituaries in 261ms (634 modules)
 GET /community-person-obituaries 200 in 358ms
 GET /settings 200 in 8ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 28ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 18ms
 GET /placeholder-memorial.jpg 404 in 26ms
 ✓ Compiled /api/users/[id] in 154ms (646 modules)
Error: Route "/api/users/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at PATCH (app/api/users/[id]/route.ts:57:12)
  55 | ) {
  56 |   try {
> 57 |     const { id } = params
     |            ^
  58 |     const body = await request.json()
  59 |     
  60 |     // 验证输入数据
prisma:query UPDATE `main`.`users` SET `preferredSystem` = ?, `updatedAt` = ? WHERE (`main`.`users`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `name` AS `name`, `email` AS `email`, `preferredSystem` AS `preferredSystem`, `createdAt` AS `createdAt`, `lastLoginAt` AS `lastLoginAt`
 PATCH /api/users/cmdoyqpae0005ptuuxtx44bfi 200 in 202ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 21ms
 GET /placeholder-memorial.jpg 404 in 39ms
 ✓ Compiled /pet-memorial in 145ms (651 modules)
 GET /pet-memorial 200 in 203ms
 GET /create-obituary 200 in 11ms
 ✓ Compiled /api/memorials in 171ms (606 modules)
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`passwordHash`, `main`.`users`.`avatar`, `main`.`users`.`preferredSystem`, `main`.`users`.`emailVerified`, `main`.`users`.`emailVerifyToken`, `main`.`users`.`resetPasswordToken`, `main`.`users`.`resetPasswordExpires`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query BEGIN IMMEDIATE
prisma:query INSERT INTO `main`.`memorials` (`id`, `title`, `slug`, `type`, `status`, `subjectName`, `subjectType`, `birthDate`, `deathDate`, `breed`, `color`, `gender`, `story`, `creatorName`, `creatorEmail`, `viewCount`, `candleCount`, `messageCount`, `likeCount`, `allowMessages`, `allowCandles`, `isPublic`, `featured`, `createdAt`, `updatedAt`, `authorId`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) RETURNING `id` AS `id`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`id` = ? LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query COMMIT
 POST /api/memorials 200 in 234ms
 GET /community-pet-obituaries 200 in 27ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 4ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 3ms
 GET /community-pet-obituaries/%E5%A4%9A%E5%A4%9A-pet-1753897719036 200 in 9ms
 ✓ Compiled /api/memorials/slug/[slug] in 97ms (608 modules)
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/%E5%A4%9A%E5%A4%9A-pet-1753897719036 200 in 186ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/%E5%A4%9A%E5%A4%9A-pet-1753897719036 200 in 24ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 9ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 3ms
 GET /community-pet-obituaries/564165-pet-1753897085476 200 in 24ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/564165-pet-1753897085476 200 in 21ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/564165-pet-1753897085476 200 in 30ms
 ✓ Compiled /api/candles in 162ms (1112 modules)
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId` FROM `main`.`memorials` WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query BEGIN IMMEDIATE
prisma:query INSERT INTO `main`.`candles` (`id`, `lightedBy`, `message`, `ipAddress`, `createdAt`, `memorialId`) VALUES (?,?,?,?,?,?) RETURNING `id` AS `id`
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`id` = ? LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`type` FROM `main`.`memorials` WHERE `main`.`memorials`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query COMMIT
 POST /api/candles 200 in 196ms
prisma:query UPDATE `main`.`memorials` SET `candleCount` = (`main`.`memorials`.`candleCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /community-pet-obituaries/564165-pet-1753897085476 200 in 69ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/564165-pet-1753897085476 200 in 53ms
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId` FROM `main`.`memorials` WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query BEGIN IMMEDIATE
prisma:query INSERT INTO `main`.`candles` (`id`, `lightedBy`, `message`, `ipAddress`, `createdAt`, `memorialId`) VALUES (?,?,?,?,?,?) RETURNING `id` AS `id`
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`id` = ? LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`type` FROM `main`.`memorials` WHERE `main`.`memorials`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query COMMIT
prisma:query UPDATE `main`.`memorials` SET `candleCount` = (`main`.`memorials`.`candleCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 POST /api/candles 200 in 6ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/564165-pet-1753897085476 200 in 18ms
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId` FROM `main`.`memorials` WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query BEGIN IMMEDIATE
prisma:query INSERT INTO `main`.`candles` (`id`, `lightedBy`, `message`, `ipAddress`, `createdAt`, `memorialId`) VALUES (?,?,?,?,?,?) RETURNING `id` AS `id`
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`id` = ? LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`type` FROM `main`.`memorials` WHERE `main`.`memorials`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query COMMIT
prisma:query UPDATE `main`.`memorials` SET `candleCount` = (`main`.`memorials`.`candleCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 POST /api/candles 200 in 6ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/564165-pet-1753897085476 200 in 18ms
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId` FROM `main`.`memorials` WHERE (`main`.`memorials`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query BEGIN IMMEDIATE
prisma:query INSERT INTO `main`.`candles` (`id`, `lightedBy`, `message`, `ipAddress`, `createdAt`, `memorialId`) VALUES (?,?,?,?,?,?) RETURNING `id` AS `id`
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`id` = ? LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`type` FROM `main`.`memorials` WHERE `main`.`memorials`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query COMMIT
prisma:query UPDATE `main`.`memorials` SET `candleCount` = (`main`.`memorials`.`candleCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 POST /api/candles 200 in 5ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/564165-pet-1753897085476 200 in 19ms
 ✓ Compiled in 403ms (1110 modules)
 GET /community-pet-obituaries/564165-pet-1753897085476 200 in 45ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/564165-pet-1753897085476 200 in 33ms
 ✓ Compiled in 145ms (1110 modules)
 ✓ Compiled in 1ms (608 modules)
 ✓ Compiled in 0ms (608 modules)
 ✓ Compiled in 0ms (608 modules)
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/564165-pet-1753897085476 200 in 242ms
 GET /community-pet-obituaries/564165-pet-1753897085476 200 in 286ms
 GET /create-obituary 200 in 13ms
 ✓ Compiled /api/memorials in 211ms (606 modules)
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`passwordHash`, `main`.`users`.`avatar`, `main`.`users`.`preferredSystem`, `main`.`users`.`emailVerified`, `main`.`users`.`emailVerifyToken`, `main`.`users`.`resetPasswordToken`, `main`.`users`.`resetPasswordExpires`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query BEGIN IMMEDIATE
prisma:query INSERT INTO `main`.`memorials` (`id`, `title`, `slug`, `type`, `status`, `subjectName`, `subjectType`, `birthDate`, `deathDate`, `breed`, `color`, `gender`, `story`, `creatorName`, `creatorEmail`, `viewCount`, `candleCount`, `messageCount`, `likeCount`, `allowMessages`, `allowCandles`, `isPublic`, `featured`, `createdAt`, `updatedAt`, `authorId`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) RETURNING `id` AS `id`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`id` = ? LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE `main`.`messages`.`memorialId` IN (?) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query COMMIT
 POST /api/memorials 200 in 243ms
 GET /community-pet-obituaries 200 in 18ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 4ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 3ms
 GET /community-pet-obituaries/%E5%A4%9A%E5%A4%9A-pet-1753819385162 200 in 7ms
 ✓ Compiled /api/memorials/slug/[slug] in 59ms (608 modules)
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/%E5%A4%9A%E5%A4%9A-pet-1753819385162 200 in 131ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/%E5%A4%9A%E5%A4%9A-pet-1753819385162 200 in 57ms
 GET /community-pet-obituaries 200 in 18ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 12ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 4ms
 GET /community-pet-obituaries/213213-pet-1753897907608 200 in 6ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/213213-pet-1753897907608 200 in 22ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/213213-pet-1753897907608 200 in 23ms
 GET /community-pet-obituaries 200 in 5ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 3ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 4ms
 GET /community-pet-obituaries/%E5%A4%9A%E5%A4%9A-pet-1753897719036 200 in 6ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/%E5%A4%9A%E5%A4%9A-pet-1753897719036 200 in 22ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/%E5%A4%9A%E5%A4%9A-pet-1753897719036 200 in 21ms
 GET /community-pet-obituaries 200 in 5ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 3ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 4ms
 GET /community-pet-obituaries/564165-pet-1753897085476 200 in 7ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/564165-pet-1753897085476 200 in 21ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/564165-pet-1753897085476 200 in 20ms
 GET /community-pet-obituaries 200 in 5ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 4ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 3ms
 GET /community-pet-obituaries/213213-pet-1753897907608 200 in 5ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/213213-pet-1753897907608 200 in 20ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/213213-pet-1753897907608 200 in 23ms
 GET /community-pet-obituaries 200 in 5ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 4ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 2ms
 GET /community-pet-obituaries/12321-pet-1753896175091 200 in 5ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/12321-pet-1753896175091 200 in 21ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/12321-pet-1753896175091 200 in 21ms
 GET /community-pet-obituaries 200 in 5ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 3ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 3ms
 GET /community-pet-obituaries/1111-pet-1753896319303 200 in 6ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/1111-pet-1753896319303 200 in 21ms
Error: Route "/api/memorials/slug/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/slug/[slug]/route.ts:10:12)
   8 | ) {
   9 |   try {
> 10 |     const { slug } = params
     |            ^
  11 |
  12 |     const memorial = await prisma.memorial.findUnique({
  13 |       where: { 
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE (`main`.`memorials`.`slug` = ? AND (`main`.`memorials`.`status` = ? AND `main`.`memorials`.`isPublic` = ?)) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?) ORDER BY `main`.`memorial_images`.`isMain` DESC, `main`.`memorial_images`.`createdAt` ASC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`messages`.`id`, `main`.`messages`.`content`, `main`.`messages`.`authorName`, `main`.`messages`.`authorEmail`, `main`.`messages`.`isPublic`, `main`.`messages`.`isApproved`, `main`.`messages`.`ipAddress`, `main`.`messages`.`userAgent`, `main`.`messages`.`createdAt`, `main`.`messages`.`updatedAt`, `main`.`messages`.`memorialId`, `main`.`messages`.`userId` FROM `main`.`messages` WHERE (`main`.`messages`.`isApproved` = ? AND `main`.`messages`.`memorialId` IN (?)) ORDER BY `main`.`messages`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`candles`.`id`, `main`.`candles`.`lightedBy`, `main`.`candles`.`email`, `main`.`candles`.`message`, `main`.`candles`.`ipAddress`, `main`.`candles`.`createdAt`, `main`.`candles`.`memorialId`, `main`.`candles`.`userId` FROM `main`.`candles` WHERE `main`.`candles`.`memorialId` IN (?) ORDER BY `main`.`candles`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`likes`.`id`, `main`.`likes`.`ipAddress`, `main`.`likes`.`createdAt`, `main`.`likes`.`memorialId`, `main`.`likes`.`userId` FROM `main`.`likes` WHERE `main`.`likes`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_tags`.`memorialId`, `main`.`memorial_tags`.`tagId` FROM `main`.`memorial_tags` WHERE `main`.`memorial_tags`.`memorialId` IN (?) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`memorials` SET `viewCount` = (`main`.`memorials`.`viewCount` + ?), `updatedAt` = ? WHERE (`main`.`memorials`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `title` AS `title`, `slug` AS `slug`, `type` AS `type`, `status` AS `status`, `subjectName` AS `subjectName`, `subjectType` AS `subjectType`, `birthDate` AS `birthDate`, `deathDate` AS `deathDate`, `age` AS `age`, `breed` AS `breed`, `color` AS `color`, `gender` AS `gender`, `relationship` AS `relationship`, `occupation` AS `occupation`, `location` AS `location`, `story` AS `story`, `memories` AS `memories`, `personalityTraits` AS `personalityTraits`, `favoriteThings` AS `favoriteThings`, `creatorName` AS `creatorName`, `creatorEmail` AS `creatorEmail`, `creatorPhone` AS `creatorPhone`, `creatorRelation` AS `creatorRelation`, `viewCount` AS `viewCount`, `candleCount` AS `candleCount`, `messageCount` AS `messageCount`, `likeCount` AS `likeCount`, `allowMessages` AS `allowMessages`, `allowCandles` AS `allowCandles`, `isPublic` AS `isPublic`, `featured` AS `featured`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`, `authorId` AS `authorId`
 GET /api/memorials/slug/1111-pet-1753896319303 200 in 21ms
 GET /community-pet-obituaries 200 in 5ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 4ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 4ms
 GET /create-obituary 200 in 6ms
 ✓ Compiled /pet-memorial in 161ms (644 modules)
 GET /pet-memorial 200 in 246ms
 GET /settings 200 in 10ms
 ✓ Compiled /api/memorials/user/[userId] in 110ms (646 modules)
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 181ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 19ms
 ✓ Compiled /login in 103ms (655 modules)
 ✓ Compiled in 220ms (506 modules)
 GET /login 200 in 426ms
 GET / 200 in 435ms
 GET /settings 200 in 40ms
 GET /login 200 in 6ms
 GET / 200 in 5ms
 GET /login 200 in 7ms
 ✓ Compiled /api/auth/login in 136ms (1158 modules)
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`passwordHash`, `main`.`users`.`avatar`, `main`.`users`.`preferredSystem`, `main`.`users`.`emailVerified`, `main`.`users`.`emailVerifyToken`, `main`.`users`.`resetPasswordToken`, `main`.`users`.`resetPasswordExpires`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`email` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`users` SET `lastLoginAt` = ?, `updatedAt` = ? WHERE (`main`.`users`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `name` AS `name`, `email` AS `email`, `preferredSystem` AS `preferredSystem`, `createdAt` AS `createdAt`, `lastLoginAt` AS `lastLoginAt`
 POST /api/auth/login 200 in 373ms
 GET /pet-memorial 200 in 28ms
 GET / 200 in 7ms
 GET /pet-memorial 200 in 17ms
 GET /community-pet-obituaries 200 in 8ms
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 6ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=50 200 in 3ms
 ✓ Compiled in 534ms (1108 modules)
 GET /pet-memorial 200 in 60ms
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=6&sort=recent 200 in 14ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=6&sort=recent 200 in 2ms
 ✓ Compiled in 139ms (1112 modules)
 GET /pet-memorial 200 in 31ms
 GET /pet-memorial 200 in 69ms
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=6&sort=recent 200 in 13ms
 ✓ Compiled /create-obituary in 122ms (609 modules)
 GET /create-obituary 200 in 178ms
 GET /pet-memorial 200 in 8ms
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=6&sort=recent 200 in 8ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=6&sort=recent 200 in 3ms
 GET / 200 in 9ms
 ✓ Compiled /human-memorial in 189ms (593 modules)
 GET /human-memorial 200 in 268ms
 GET / 200 in 10ms
 GET /human-memorial 200 in 18ms
 GET / 200 in 5ms
 GET /login 200 in 9ms
 GET /human-memorial 200 in 15ms
 ✓ Compiled in 357ms (1096 modules)
 GET /human-memorial 200 in 44ms
 ✓ Compiled in 133ms (1096 modules)
 GET /human-memorial 200 in 31ms
 GET /human-memorial 200 in 70ms
 GET /human-memorial 200 in 17ms
 GET / 200 in 10ms
 ✓ Compiled /create-person-obituary in 97ms (593 modules)
 GET /create-person-obituary 200 in 126ms
 GET /human-memorial 200 in 22ms
 GET / 200 in 6ms
 GET /human-memorial 200 in 14ms
 GET / 200 in 5ms
 GET /human-memorial 200 in 16ms
 GET /human-memorial 200 in 14ms
 GET /create-person-obituary 200 in 5ms
 GET /human-memorial 200 in 15ms
 ✓ Compiled in 276ms (1096 modules)
 GET /human-memorial 200 in 66ms
 ✓ Compiled /create-person-obituary in 112ms (593 modules)
 GET /create-person-obituary 200 in 143ms
 ✓ Compiled in 457ms (1093 modules)
 GET /create-person-obituary 200 in 104ms
 ✓ Compiled in 181ms (1093 modules)
 GET /create-person-obituary 200 in 29ms
 ✓ Compiled in 152ms (1093 modules)
 GET /create-person-obituary 200 in 21ms
 ✓ Compiled in 125ms (1093 modules)
 GET /create-person-obituary 200 in 16ms
 GET /create-person-obituary 200 in 72ms
 GET /create-person-obituary 200 in 34ms
 ⚠ Fast Refresh had to perform a full reload due to a runtime error.
 ✓ Compiled in 290ms (1093 modules)
 GET /create-person-obituary 200 in 300ms
 GET /create-person-obituary 200 in 33ms
 GET /create-person-obituary 200 in 34ms
 ✓ Compiled in 240ms (1093 modules)
 GET /create-person-obituary 200 in 20ms
 ✓ Compiled in 118ms (1093 modules)
 GET /create-person-obituary 200 in 17ms
 ✓ Compiled in 239ms (1093 modules)
 GET /create-person-obituary 200 in 24ms
 ✓ Compiled in 130ms (1093 modules)
 GET /create-person-obituary 200 in 15ms
 ✓ Compiled in 118ms (1093 modules)
 GET /create-person-obituary 200 in 14ms
 GET /create-person-obituary 200 in 57ms
 GET /login 200 in 10ms
 GET / 200 in 9ms
 ✓ Compiled /pet-memorial in 264ms (593 modules)
 GET /pet-memorial 200 in 349ms
 ✓ Compiled /api/memorials in 108ms (623 modules)
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=6&sort=recent 200 in 190ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=6&sort=recent 200 in 11ms
 GET /create-obituary 200 in 22ms
 GET /login 200 in 6ms
 ✓ Compiled /api/auth/login in 56ms (627 modules)
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`passwordHash`, `main`.`users`.`avatar`, `main`.`users`.`preferredSystem`, `main`.`users`.`emailVerified`, `main`.`users`.`emailVerifyToken`, `main`.`users`.`resetPasswordToken`, `main`.`users`.`resetPasswordExpires`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`email` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`users` SET `lastLoginAt` = ?, `updatedAt` = ? WHERE (`main`.`users`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `name` AS `name`, `email` AS `email`, `preferredSystem` AS `preferredSystem`, `createdAt` AS `createdAt`, `lastLoginAt` AS `lastLoginAt`
 POST /api/auth/login 200 in 284ms
 GET /pet-memorial 200 in 15ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=6&sort=recent 200 in 5ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=6&sort=recent 200 in 3ms
 ✓ Compiled in 374ms (1094 modules)
 GET /pet-memorial 200 in 36ms
 ✓ Compiled in 120ms (1094 modules)
 GET /pet-memorial 200 in 17ms
 ✓ Compiled in 114ms (1094 modules)
 GET /pet-memorial 200 in 14ms
 ✓ Compiled in 113ms (1094 modules)
 GET /pet-memorial 200 in 17ms
 ✓ Compiled in 116ms (1094 modules)
 GET /pet-memorial 200 in 15ms
 ✓ Compiled in 109ms (1094 modules)
 GET /pet-memorial 200 in 14ms
 ✓ Compiled in 113ms (1094 modules)
 GET /pet-memorial 200 in 13ms
 ✓ Compiled /settings in 280ms (608 modules)
 GET /settings 200 in 336ms
 ✓ Compiled /api/memorials/user/[userId] in 67ms (628 modules)
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 135ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 19ms
 ✓ Compiled /_not-found in 119ms (1127 modules)
 GET /placeholder-memorial.jpg 404 in 196ms
 GET /placeholder-memorial.jpg 404 in 18ms
 GET / 200 in 7ms
 ✓ Compiled /login in 94ms (636 modules)
 GET /login 200 in 131ms
 GET / 200 in 6ms
 GET /human-memorial 200 in 27ms
 GET /create-person-obituary 200 in 10ms
 GET /login 200 in 6ms
 ✓ Compiled /api/auth/login in 226ms (639 modules)
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`passwordHash`, `main`.`users`.`avatar`, `main`.`users`.`preferredSystem`, `main`.`users`.`emailVerified`, `main`.`users`.`emailVerifyToken`, `main`.`users`.`resetPasswordToken`, `main`.`users`.`resetPasswordExpires`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`email` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`users` SET `lastLoginAt` = ?, `updatedAt` = ? WHERE (`main`.`users`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `name` AS `name`, `email` AS `email`, `preferredSystem` AS `preferredSystem`, `createdAt` AS `createdAt`, `lastLoginAt` AS `lastLoginAt`
 POST /api/auth/login 200 in 520ms
 GET /pet-memorial 200 in 23ms
 ✓ Compiled /api/memorials in 69ms (641 modules)
 GET /api/memorials?type=PET&limit=6&sort=recent 200 in 90ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=6&sort=recent 200 in 2ms
 ✓ Compiled in 327ms (1109 modules)
 GET /pet-memorial 200 in 57ms
 ✓ Compiled in 131ms (1109 modules)
 GET /pet-memorial 200 in 26ms
 ✓ Compiled in 117ms (1109 modules)
 GET /pet-memorial 200 in 13ms
 ✓ Compiled in 63ms (509 modules)
 GET /pet-memorial 200 in 6ms
 ✓ Compiled in 287ms (1111 modules)
 GET /pet-memorial 200 in 29ms
 ✓ Compiled in 280ms (1111 modules)
 GET /pet-memorial 200 in 41ms
 ✓ Compiled in 149ms (1111 modules)
 GET /pet-memorial 200 in 24ms
 ✓ Compiled in 116ms (1111 modules)
 GET /pet-memorial 200 in 14ms
 ✓ Compiled in 166ms (1111 modules)
 GET /pet-memorial 200 in 19ms
 ✓ Compiled in 108ms (1111 modules)
 GET /pet-memorial 200 in 14ms
 GET /settings 200 in 13ms
 ✓ Compiled /api/memorials/user/[userId] in 255ms (621 modules)
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT 1
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 365ms
Error: Route "/api/memorials/user/[userId]" used `params.userId`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/memorials/user/[userId]/route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { userId } = params
     |            ^
  10 |
  11 |     if (!userId) {
  12 |       return NextResponse.json(
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`authorId` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?,?) LIMIT ? OFFSET ?
 GET /api/memorials/user/cmdoyqpae0005ptuuxtx44bfi 200 in 18ms
 ✓ Compiled /login in 119ms (629 modules)
 ✓ Compiled (636 modules)
 GET /login 200 in 317ms
 GET / 200 in 329ms
 GET / 200 in 5ms
 GET /human-memorial 200 in 28ms
 GET /create-person-obituary 200 in 10ms
 ✓ Compiled /register in 182ms (1141 modules)
 GET /register 200 in 213ms
 GET /login 200 in 6ms
 ✓ Compiled /api/auth/login in 115ms (649 modules)
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`passwordHash`, `main`.`users`.`avatar`, `main`.`users`.`preferredSystem`, `main`.`users`.`emailVerified`, `main`.`users`.`emailVerifyToken`, `main`.`users`.`resetPasswordToken`, `main`.`users`.`resetPasswordExpires`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`email` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`users` SET `lastLoginAt` = ?, `updatedAt` = ? WHERE (`main`.`users`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `name` AS `name`, `email` AS `email`, `preferredSystem` AS `preferredSystem`, `createdAt` AS `createdAt`, `lastLoginAt` AS `lastLoginAt`
 POST /api/auth/login 200 in 384ms
 GET /pet-memorial 200 in 13ms
 ✓ Compiled /api/memorials in 70ms (651 modules)
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=6&sort=recent 200 in 87ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=6&sort=recent 200 in 2ms
 ✓ Compiled /create-obituary in 93ms (658 modules)
 GET /create-obituary 200 in 125ms
 GET /pet-memorial 200 in 8ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=6&sort=recent 200 in 8ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`memorials`.`id` FROM `main`.`memorials` WHERE `main`.`memorials`.`type` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`memorials`.`id`, `main`.`memorials`.`title`, `main`.`memorials`.`slug`, `main`.`memorials`.`type`, `main`.`memorials`.`status`, `main`.`memorials`.`subjectName`, `main`.`memorials`.`subjectType`, `main`.`memorials`.`birthDate`, `main`.`memorials`.`deathDate`, `main`.`memorials`.`age`, `main`.`memorials`.`breed`, `main`.`memorials`.`color`, `main`.`memorials`.`gender`, `main`.`memorials`.`relationship`, `main`.`memorials`.`occupation`, `main`.`memorials`.`location`, `main`.`memorials`.`story`, `main`.`memorials`.`memories`, `main`.`memorials`.`personalityTraits`, `main`.`memorials`.`favoriteThings`, `main`.`memorials`.`creatorName`, `main`.`memorials`.`creatorEmail`, `main`.`memorials`.`creatorPhone`, `main`.`memorials`.`creatorRelation`, `main`.`memorials`.`viewCount`, `main`.`memorials`.`candleCount`, `main`.`memorials`.`messageCount`, `main`.`memorials`.`likeCount`, `main`.`memorials`.`allowMessages`, `main`.`memorials`.`allowCandles`, `main`.`memorials`.`isPublic`, `main`.`memorials`.`featured`, `main`.`memorials`.`createdAt`, `main`.`memorials`.`updatedAt`, `main`.`memorials`.`publishedAt`, `main`.`memorials`.`authorId`, COALESCE(`aggr_selection_0_Message`.`_aggr_count_messages`, 0) AS `_aggr_count_messages`, COALESCE(`aggr_selection_1_Candle`.`_aggr_count_candles`, 0) AS `_aggr_count_candles`, COALESCE(`aggr_selection_2_Like`.`_aggr_count_likes`, 0) AS `_aggr_count_likes` FROM `main`.`memorials` LEFT JOIN (SELECT `main`.`messages`.`memorialId`, COUNT(*) AS `_aggr_count_messages` FROM `main`.`messages` WHERE 1=1 GROUP BY `main`.`messages`.`memorialId`) AS `aggr_selection_0_Message` ON (`main`.`memorials`.`id` = `aggr_selection_0_Message`.`memorialId`) LEFT JOIN (SELECT `main`.`candles`.`memorialId`, COUNT(*) AS `_aggr_count_candles` FROM `main`.`candles` WHERE 1=1 GROUP BY `main`.`candles`.`memorialId`) AS `aggr_selection_1_Candle` ON (`main`.`memorials`.`id` = `aggr_selection_1_Candle`.`memorialId`) LEFT JOIN (SELECT `main`.`likes`.`memorialId`, COUNT(*) AS `_aggr_count_likes` FROM `main`.`likes` WHERE 1=1 GROUP BY `main`.`likes`.`memorialId`) AS `aggr_selection_2_Like` ON (`main`.`memorials`.`id` = `aggr_selection_2_Like`.`memorialId`) WHERE `main`.`memorials`.`type` = ? ORDER BY `main`.`memorials`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`email` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`memorial_images`.`id`, `main`.`memorial_images`.`filename`, `main`.`memorial_images`.`originalName`, `main`.`memorial_images`.`url`, `main`.`memorial_images`.`thumbnailUrl`, `main`.`memorial_images`.`size`, `main`.`memorial_images`.`mimeType`, `main`.`memorial_images`.`width`, `main`.`memorial_images`.`height`, `main`.`memorial_images`.`isMain`, `main`.`memorial_images`.`order`, `main`.`memorial_images`.`caption`, `main`.`memorial_images`.`createdAt`, `main`.`memorial_images`.`memorialId` FROM `main`.`memorial_images` WHERE `main`.`memorial_images`.`memorialId` IN (?,?,?,?,?,?) ORDER BY `main`.`memorial_images`.`isMain` DESC LIMIT ? OFFSET ?
 GET /api/memorials?type=PET&limit=6&sort=recent 200 in 3ms
 GET /create-obituary 200 in 6ms
 ✓ Compiled in 364ms (1085 modules)
 GET /create-obituary 200 in 87ms
 ⚠ Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
 GET /create-obituary 200 in 89ms
 ✓ Compiled in 131ms (1085 modules)
 GET /create-obituary 200 in 27ms
 ⚠ Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
 GET /create-obituary 200 in 79ms
 ✓ Compiled /_not-found in 204ms (1075 modules)
 GET /create-obituary 404 in 243ms
 GET /_next/static/css/app/layout.css?v=1753913247054 404 in 18ms
 GET /_next/static/chunks/main-app.js?v=1753913247054 404 in 35ms
 GET /_next/static/chunks/app-pages-internals.js 404 in 34ms
 GET /_next/static/chunks/app/layout.js 404 in 34ms
 ✓ Compiled / in 54ms (581 modules)
 GET / 200 in 109ms
 GET /_next/static/css/app/layout.css?v=1753913251827 404 in 13ms
 GET /_next/static/chunks/main-app.js?v=1753913251827 404 in 44ms
 GET /_next/static/chunks/app/layout.js 404 in 44ms
 GET /_next/static/chunks/app-pages-internals.js 404 in 44ms
 GET /_next/static/chunks/app/page.js 404 in 44ms
 GET / 200 in 36ms
 GET /_next/static/css/app/layout.css?v=1753913256877 404 in 13ms
 GET /_next/static/chunks/main-app.js?v=1753913256877 404 in 47ms
 GET /_next/static/chunks/app/layout.js 404 in 34ms
 GET /_next/static/chunks/app/page.js 404 in 34ms
 GET /_next/static/chunks/app-pages-internals.js 404 in 45ms
